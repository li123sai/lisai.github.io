<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Eureka搭建防坑]]></title>
    <url>%2F2018%2F07%2F11%2FEureka%E6%90%AD%E5%BB%BA%E9%98%B2%E5%9D%91%2F</url>
    <content type="text"><![CDATA[SpringCloud2.0&#x4E0B;Eureka&#x642D;&#x5EFA;&#x4F7F;&#x7528;IDE&#x521B;&#x5EFA;Eureka &#x5B89;&#x88C5; pom&#x5C55;&#x793A; &#x6309;&#x7167;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x642D;&#x5EFA;&#x5B8C;&#x6210;,&#x9879;&#x76EE;&#x6B63;&#x5E38;&#x8FD0;&#x884C;,&#x4F46;&#x662F;&#x8BBF;&#x95EE;&#x9875;&#x9762;&#x65F6;.&#x5C3C;&#x739B;.&#x62A5;&#x9519; &#x518D;&#x7F51;&#x4E0A;&#x627E;&#x4E86;&#x5F88;&#x591A;&#x65B9;&#x6CD5;.&#x6709;&#x8BF4;freemarker-2.3.27-incubating&#x7684;jar&#x5305;&#x95EE;&#x9898;,&#x914D;&#x7F6E;&#x95EE;&#x9898;&#x5C1D;&#x8BD5;&#x540E;&#x90FD;&#x4E0D;&#x884C; &#x89E3;&#x51B3;&#x65B9;&#x6CD5; &#x53BB;SpringCloud&#x5B98;&#x7F51;&#x67E5;&#x770B;&#x4F9D;&#x8D56;,&#x77AC;&#x95F4;&#x660E;&#x767D;. &#x5C06;&#x7248;&#x672C;&#x66FF;&#x6362;&#x95EE;&#x9898;&#x89E3;&#x51B3;. L2Dwidget.init({});]]></content>
      <categories>
        <category>SpringCloud</category>
      </categories>
      <tags>
        <tag>SpringCloud</tag>
        <tag>Eureka</tag>
        <tag>分布式</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Nginx入门]]></title>
    <url>%2F2018%2F07%2F07%2Fnginx%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[Nginx&#x5165;&#x95E8;Linux&#x4E0B;Nginx&#x73AF;&#x5883;&#x642D;&#x5EFA;&#x5B89;&#x88C5;Nginx&#x6240;&#x9700;&#x4F9D;&#x8D56;&#x5305; gcc gcc-c++ zlib zlib-devel openssl openssl-devel pcre pcre-devel Linux&#x53EF;&#x4EE5;&#x8054;&#x7F51;,&#x5E76;&#x4E14;&#x955C;&#x50CF;&#x6E90;&#x90FD;&#x6CA1;&#x95EE;&#x9898;,&#x76F4;&#x63A5;&#x4F7F;&#x7528;yum&#x547D;&#x4EE4;&#x5B89;&#x88C5;.&#x8D85;&#x65B9;&#x4FBF;. 1234567&gt; yum -y install gcc gcc-c++ make libtool zlib zlib-devel openssl openssl-devel pcre pcre-devel&gt; wget https://sourceforge.net/projects/pcre/files/pcre/7.8/pcre-7.8.tar.gz&gt; wget https://sourceforge.net/projects/libpng/files/zlib/1.2.11/zlib-1.2.11.tar.gz/download?use_mirror=nchc&amp;download=&gt; wget http://nginx.org/download/nginx-1.10.3.tar.gz pcre&#x624B;&#x52A8;&#x4E0B;&#x8F7D;&#x5730;&#x5740; zlib&#x624B;&#x52A8;&#x4E0B;&#x8F7D;&#x5730;&#x5740; nginx&#x624B;&#x52A8;&#x4E0B;&#x8F7D;&#x5730;&#x5740; &#x5B89;&#x88C5;Nginx &#x5B89;&#x88C5;&#x524D;&#x914D;&#x7F6E; 12./configuremake &amp;&amp; make install &#x542F;&#x52A8;&#x5173;&#x95ED;Nginx &#x68C0;&#x67E5;&#x914D;&#x7F6E;&#x6587;&#x4EF6;&#x662F;&#x5426;&#x6B63;&#x786E; 1nginx -t &#x67E5;&#x770B;&#x6240;&#x6709;&#x7F16;&#x8BD1;&#x9009;&#x9879; 1nginx -v &#x542F;&#x52A8; 1nginx &#x5173;&#x95ED; 123nginx -s stoppkill nginxWindos&#x5173;&#x95ED;&#x6709;&#x70B9;&#x5751;,&#x4F7F;&#x7528;&#x547D;&#x4EE4;&#x5173;&#x95ED;&#x540E;&#x670D;&#x52A1;&#x4F9D;&#x7136;&#x5B58;&#x5728;.&#x9700;&#x8981;&#x6279;&#x91CF;&#x6740;--&gt; taskkill /fi &quot;imagename eq nginx.EXE&quot; /f &#x91CD;&#x542F; 1nginx -s reload Nginx&#x914D;&#x7F6E;&#x8BF4;&#x660E;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117118119120121122123124125126127128129130131132133134135136137138139140141142143144145146147148149150151152153154155156157158159160161162163164165166167168169170#&#x5168;&#x533A;&#x914D;&#x7F6E;&#x533A;#&#x5B9A;&#x4E49;Nginx&#x8FD0;&#x884C;&#x7684;&#x7528;&#x6237;&#x548C;&#x7528;&#x6237;&#x7EC4;#user nobody;#Nginx&#x8FDB;&#x7A0B;&#x6570;,&#x5EFA;&#x8BAE;&#x8BBE;&#x7F6E;&#x4E3A;&#x7B49;&#x4E8E;CPU&#x603B;&#x6838;&#x5FC3;&#x6570;worker_processes 3;#&#x5168;&#x5C40;&#x9519;&#x8BEF;&#x65E5;&#x5FD7;&#x5B9A;&#x4E49;&#x7C7B;&#x578B;#error_log logs/error.log;#error_log logs/error.log notice;#error_log logs/error.log info;#&#x8FDB;&#x7A0B;PID&#x6587;&#x4EF6;#pid logs/nginx.pid;#&#x7528;&#x6765;&#x6307;&#x5B9A;Nginx&#x7684;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F;&#x53CA;&#x8FDE;&#x63A5;&#x6570;&#x4E0A;&#x9650;(&#x5305;&#x542B;&#x6240;&#x6709;&#x5904;&#x7406;&#x8FDE;&#x63A5;&#x7684;&#x8BBE;&#x7F6E;)events { #&#x4E8B;&#x4EF6;&#x6A21;&#x5757;&#x6307;&#x4EE4;,&#x6307;&#x5B9A;Nginx&#x7684;&#x5DE5;&#x4F5C;&#x6A21;&#x5F0F; #use epoll; #&#x5B9A;&#x4E49;Nginx&#x6BCF;&#x4E2A;&#x8FDB;&#x7A0B;&#x6700;&#x5927;&#x8FDE;&#x63A5;&#x6570; worker_connections 1024;}http { #&#x5BFC;&#x5165;&#x6587;&#x4EF6;&#x6269;&#x5C55;&#x540D;&#x4E0E;&#x6587;&#x4EF6;&#x7C7B;&#x578B;&#x6620;&#x5C04;&#x8868;(&#x5982;&#x679C;&#x6620;&#x5C04;&#x8868;&#x627E;&#x4E0D;&#x5230;,&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x914D;&#x7F6E;) include mime.types; #&#x9ED8;&#x8BA4;&#x914D;&#x7F6E; default_type application/octet-stream; client_max_body_size 30m; #&#x5B9A;&#x4E49;&#x65E5;&#x5FD7;&#x6587;&#x4EF6;&#x8F93;&#x51FA;&#x5185;&#x5BB9; log_format main &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; a&quot;$request_body&quot;a &apos; &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos; &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;; #&#x65E5;&#x5FD7;&#x4F4D;&#x7F6E; access_log logs/access.log main; #&#x5F00;&#x542F;&#x9AD8;&#x6548;&#x6587;&#x4EF6;&#x4F20;&#x8F93;&#x6A21;&#x5F0F;(&#x666E;&#x901A;&#x5E94;&#x7528;&#x5FC5;&#x987B;&#x8BBE;&#x4E3A;on,&#x5982;&#x679C;&#x662F;&#x4E0B;&#x8F7D;&#x7B49;&#x5E94;&#x7528;&#x53EF;&#x8BBE;&#x7F6E;off) sendfile on; #&#x548C;&#x4F20;&#x8F93;&#x6A21;&#x5F0F;&#x642D;&#x914D;&#x4F7F;&#x7528; #tcp_nopush on; #&#x957F;&#x8FDE;&#x63A5;&#x8D85;&#x65F6;&#x65F6;&#x95F4;,&#x5355;&#x4F4D;&#x662F;&#x79D2; #keepalive_timeout 0; keepalive_timeout 65; #&#x5F00;&#x542F;gzip&#x96C5;&#x4FD7;&#x8F93;&#x51FA; gzip on; # &#x8D1F;&#x8F7D;&#x5747;&#x8861;&#x914D;&#x7F6E; upstream dev { ip_hash; server localhost:8080 weight=1; server localhost:8081 weight=5; } #&#x865A;&#x62DF;&#x4E3B;&#x673A;&#x7684;&#x914D;&#x7F6E; server { #&#x76D1;&#x542C;&#x7AEF;&#x53E3; listen 8088; #&#x57DF;&#x540D;&#x8BBE;&#x7F6E;,&#x53EF;&#x4EE5;&#x591A;&#x4E2A;,&#x7528;&#x7A7A;&#x683C;&#x9694;&#x5F00; server_name localhost; #&#x5B57;&#x7B26;&#x96C6;&#x8BBE;&#x7F6E;(&#x8FD9;&#x4E2A;&#x4E0D;&#x7528;&#x6253;&#x5F00;,&#x8001;&#x6BDB;&#x5B50;&#x7684;) #charset koi8-r; #access_log logs/host.access.log main; # &#x7CBE;&#x786E;&#x5339;&#x914D; / ,&#x914D;&#x7F6E;&#x9996;&#x9875; location /{ access_log logs/dm.log main; proxy_pass http://dev; } location ~ .*\.(html|htm|ico|png|jpg|jpeg|js|css|bmp|gif)$ { proxy_pass http://dev; } # &#x4E0D;&#x533A;&#x5206;&#x5927;&#x5C0F;&#x5199;&#x7684;&#x6B63;&#x5219;&#x5339;&#x914D;&#xFF0C;&#x7F51;&#x7AD9;&#x9759;&#x6001;&#x6587;&#x4EF6; #location ~* \.(gif|jpg|png|js|css)$ { # root D:\apache-tomcat-8.5.11\webapps\dmbj1; # #proxy_pass http://localhost:8080; # &#x6B63;&#x5219;&#x5339;&#x914D;&#x4E2D;&#xFF0C;proxy_pass &#x5BF9;&#x5E94;&#x7684;&#x4EE3;&#x7406;&#x8DEF;&#x5F84;&#x4E2D;&#x4E0D;&#x80FD;&#x5305;&#x542B; / ,&#x5982;http://localhost:8088/&#x662F;&#x9519;&#x8BEF;&#x7684; #} #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } # proxy the PHP scripts to Apache listening on 127.0.0.1:80 # #location ~ \.php$ { # proxy_pass http://127.0.0.1; #} # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000 # #location ~ \.php$ { # root html; # fastcgi_pass 127.0.0.1:9000; # fastcgi_index index.php; # fastcgi_param SCRIPT_FILENAME /scripts$fastcgi_script_name; # include fastcgi_params; #} # deny access to .htaccess files, if Apache&apos;s document root # concurs with nginx&apos;s one # #location ~ /\.ht { # deny all; #} } # another virtual host using mix of IP-, name-, and port-based configuration # #server { # listen 8000; # listen somename:8080; # server_name somename alias another.alias; # location / { # root html; # index index.html index.htm; # } #} # HTTPS server # #server { # listen 443 ssl; # server_name localhost; # ssl_certificate cert.pem; # ssl_certificate_key cert.key; # ssl_session_cache shared:SSL:1m; # ssl_session_timeout 5m; # ssl_ciphers HIGH:!aNULL:!MD5; # ssl_prefer_server_ciphers on; # location / { # root html; # index index.html index.htm; # } #}} L2Dwidget.init({});]]></content>
      <categories>
        <category>Nginx</category>
      </categories>
      <tags>
        <tag>Nginx</tag>
        <tag>负载均衡</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Oracle设置全局SGA]]></title>
    <url>%2F2018%2F05%2F10%2FOracle%E8%AE%BE%E7%BD%AE%E5%85%A8%E5%B1%80SGA%2F</url>
    <content type="text"><![CDATA[Oracle&#x8BBE;&#x7F6E;&#x5168;&#x5C40;SGASGA&#x6982;&#x8FF0; Oracle&#x7684;&#x5185;&#x5B58;&#x53EF;&#x4EE5;&#x6309;&#x7167;&#x5171;&#x4EAB;&#x548C;&#x79C1;&#x6709;&#x7684;&#x89D2;&#x5EA6;&#x5206;&#x4E3A;&#x7CFB;&#x7EDF;&#x5168;&#x5C40;&#x533A;&#x548C;&#x8FDB;&#x7A0B;&#x5168;&#x5C40;&#x533A;,&#x4E5F;&#x5C31;&#x662F; SGA&#x548C; PGA(process global area or private global area)&#x3002;&#x5BF9;&#x4E8E;SGA&#x533A;&#x57DF;&#x5185;&#x7684;&#x5185;&#x5B58;&#x6765;&#x8BF4;,&#x662F;&#x5171;&#x4EAB;&#x7684;&#x5168;&#x5C40;&#x7684;,&#x5728;UNIX&#x4E0A;,&#x5FC5;&#x987B;&#x4E3A;Oracle&#x8BBE;&#x7F6E;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x6BB5;(&#x53EF;&#x4EE5;&#x662F;&#x4E00;&#x4E2A;&#x6216;&#x8005;&#x591A;&#x4E2A;),&#x56E0;&#x4E3A;Oracle&#x5728;UNIX&#x4E0A;&#x662F;&#x591A;&#x8FDB;&#x7A0B;;&#x800C;&#x5728;Windows&#x4E0A;Oracle&#x662F;&#x5355;&#x8FDB;&#x7A0B;(&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;),&#x6240;&#x4EE5;&#x4E0D;&#x7528;&#x8BBE;&#x7F6E;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x6BB5;.PGA&#x662F;&#x5C5E;&#x4E8E;&#x8FDB;&#x7A0B; (&#x7EBF;&#x7A0B;)&#x79C1;&#x6709;&#x7684;&#x533A;&#x57DF;.&#x5728;Oracle&#x4F7F;&#x7528;&#x5171;&#x4EAB;&#x670D;&#x52A1;&#x5668;&#x6A21;&#x5F0F;&#x4E0B;(MTS),PGA&#x4E2D;&#x7684;&#x4E00;&#x90E8;&#x5206;,&#x4E5F;&#x5C31;&#x662F;UGA&#x4F1A;&#x88AB;&#x653E;&#x5165;&#x5171;&#x4EAB;&#x5185;&#x5B58;large_pool_size&#x4E2D;. Oracle&#x670D;&#x52A1;&#x5668;&#x914D;&#x7F6E;: Windows&#x7248;&#x672C; Windows Server 2008 R2RAM 64.0GB&#x670D;&#x52A1;&#x5668;&#x53EA;&#x653E;&#x4E86;Oracle,&#x4F46;&#x662F;&#x8FDE;&#x63A5;&#x65F6;&#x5019;&#x7279;&#x522B;&#x5361;,&#x627E;&#x4E86;&#x70B9;&#x8D44;&#x6599;&#x5F00;&#x59CB;&#x4FEE;&#x6539;SGA 1.sga_target &#x53C2;&#x6570;1alter system set sga_target = 40000m&#xA0; scope=both; &#x7279;&#x6027;&#xFF1A;1&#xFF09;.ASMM &#x81EA;&#x52A8;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x7B54;&#xFF1A;SGA_TARGET&#x53C2;&#x6570;&#x63A7;&#x5236;ASMM&#xFF08;&#x81EA;&#x52A8;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#xFF09;&#x662F;Oracle&#x4E00;&#x4E2A;&#x65B0;&#x7279;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x5B83;&#x7684;&#x542B;&#x4E49;&#x548C;SGA_MAX_SIZE&#x7684;&#x4E00;&#x6837;&#xFF0C;&#x4E5F;&#x8868;&#x793A;SGA&#x6700;&#x5927;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x4E8E;&#x662F;&#x5B83;&#x4E5F;&#x5C31;&#x6709;&#x4E86;&#x4E00;&#x4E2A;&#x9650;&#x5236;&#xFF0C;&#x90A3;&#x5C31;&#x662F;&#x5B83;&#x7684;&#x5927;&#x5C0F;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;SGA_MAX_SIZE&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x4E00;&#x65E6;&#x7ED9;SGA_TARGET&#x6307;&#x5B9A;&#x503C;&#x540E;&#xFF08;&#x9ED8;&#x8BA4;&#x4E3A;0&#xFF0C;&#x5373;&#x6CA1;&#x6709;&#x542F;&#x52A8;ASMM&#xFF09;&#xFF0C;&#x5C31;&#x81EA;&#x52A8;&#x542F;&#x52A8;&#x4E86;ASMM&#x7279;&#x6027;2&#xFF09;.sga_target &#x4E0E;sga_max_size&#x5173;&#x7CFB;&#x7B54;&#xFF1A;&#x5373;&#x5F53;SGA_TARGET&lt; SGA_MAX_SIZE&#x7684;&#x65F6;&#x5019;&#xFF0C;oracle&#x5C31;&#x4F1A;&#x5FFD;&#x7565;SGA_MAX_SIZE&#x7684;&#x503C;&#xFF0C;oracle&#x7684;SGA&#x5C31;&#x4E0E;SGA_TARGET&#x4E3A;&#x51C6;&#xFF0C;&#x5B83;&#x80FD;&#x52A8;&#x6001;&#x6539;&#x53D8;&#x5927;&#x5C0F;&#xFF0C;&#x4F46;&#x662F;&#x4E0D;&#x80FD;&#x5927;&#x4E8E;SGA_MAX_SIZE&#x7684;&#x503C;&#xFF0C;&#x53EF;&#x4EE5;&#x5C0F;&#x4E8E;&#x3002;3&#xFF09;.sga_target &#x52A8;&#x6001;&#x53C2;&#x6570;&#x7B54;&#xFF1A;SGA_TARGET&#x662F;&#x53EF;&#x4EE5;&#x5728;&#x672C;&#x5B9E;&#x4F8B;&#x5185;&#x52A8;&#x6001;&#x4FEE;&#x6539;&#x7684;&#xFF0C;&#x4E0D;&#x7528;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F8B;&#xFF0C;&#x6240;&#x8C13;&#x7684;&#x52A8;&#x6001;&#x53C2;&#x6570;&#x662F;&#x6307;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4FEE;&#x6539;&#x5373;&#x5728;&#x5185;&#x5B58;&#x751F;&#x6548;&#xFF0C;&#x4E0D;&#x7528;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x6765;&#x52A0;&#x8F7D;&#x53C2;&#x6570;&#x6587;&#x4EF6;&#x751F;&#x6548;&#x3002;4&#xFF09;.ASMM &#x81EA;&#x52A8;&#x5171;&#x4EAB;&#x5185;&#x5B58;&#x7BA1;&#x7406;&#x4F1A;&#x5F71;&#x54CD;&#x54EA;&#x4E9B;&#x5185;&#x5B58;&#x533A;&#x5462;&#x7B54;&#xFF1A;&#x5F53;&#x542F;&#x7528;Oracle&#x7684;ASMM&#x65B0;&#x7279;&#x6027;&#x4EE5;&#x540E;&#xFF0C;&#x4E5F;&#x4E0D;&#x662F;SGA&#x7684;&#x6240;&#x6709;&#x5185;&#x5B58;&#x533A;&#x7684;&#x5927;&#x5C0F;&#x90FD;&#x5F00;&#x59CB;&#x52A8;&#x6001;&#x5171;&#x4EAB;&#x8D77;&#x6765;&#xFF0C;&#x53EA;&#x6709;&#x4EE5;&#x4E0B;&#x7684;&#x8FD9;&#x4E9B;&#x533A;&#x7684;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#x53EF;&#x52A8;&#x6001;&#x5171;&#x4EAB;&#xFF0C;&#x800C;SGA&#x4E2D;&#x7684;&#x5176;&#x4ED6;&#x533A;&#x57DF;&#x7684;&#x5185;&#x5B58;&#x5927;&#x5C0F;&#x4ECD;&#x7136;&#x662F;&#x56FA;&#x5B9A;&#x4E0D;&#x5171;&#x4EAB;&#x7684;12345* Buffer cache (DB_CACHE_SIZE)* Shared pool (SHARED_POOL_SIZE)* Large pool (LARGE_POOL_SIZE)* Java pool (JAVA_POOL_SIZE)* Streams pool (STREAMS_POOL_SIZE) 2.sga_max_size&#x53C2;&#x6570;1alter system set sga_max_size=40000m scope=spfile; &#x7279;&#x6027;&#xFF1A;1&#xFF09;.sga_max_size&#x9759;&#x6001;&#x53C2;&#x6570;&#x5B83;&#x7528;&#x6765;&#x63A7;&#x5236;SGA&#x4F7F;&#x7528;&#x865A;&#x62DF;&#x5185;&#x5B58;&#x7684;&#x6700;&#x5927;&#x5927;&#x5C0F;&#xFF0C;&#x5F53;&#x5B9E;&#x4F8B;&#x542F;&#x52A8;&#x540E;&#xFF0C;&#x5404;&#x4E2A;&#x5185;&#x5B58;&#x533A;&#x53EA;&#x5206;&#x914D;&#x5B9E;&#x4F8B;&#x6240;&#x9700;&#x8981;&#x7684;&#x6700;&#x5C0F;&#x5927;&#x5C0F;&#xFF0C;&#x5728;&#x968F;&#x540E;&#x7684;&#x8FD0;&#x884C;&#x8FC7;&#x7A0B;&#x4E2D;&#xFF0C;&#x518D;&#x6839;&#x636E;&#x9700;&#x8981;&#x6269;&#x5C55;&#x4ED6;&#x4EEC;&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x800C;&#x4ED6;&#x4EEC;&#x7684;&#x603B;&#x548C;&#x5927;&#x5C0F;&#x53D7;&#x5230;&#x4E86;SGA_MAX_SIZE&#x7684;&#x9650;&#x5236;&#x3002;&#x201C;&#x4FEE;&#x6539;SGA_MAX_SIZE&#x7684;&#x5927;&#x5C0F;&#xFF0C;&#x5FC5;&#x987B;&#x8981;&#x91CD;&#x65B0;&#x542F;&#x52A8;&#x6570;&#x636E;&#x5E93;&#x5B9E;&#x4F8B;&#x201D;&#xFF0C;&#x56E0;&#x4E3A;&#x662F;&#x9759;&#x6001;&#x53C2;&#x6570;&#x3002;&#x6240;&#x8C13;&#x9759;&#x6001;&#x53C2;&#x6570;&#x662F;&#x6307;&#x4FEE;&#x6539;&#x4E4B;&#x540E;&#x5373;&#x5728;spfile&#x53C2;&#x6570;&#x6587;&#x4EF6;&#x91CC;&#x751F;&#x6548;&#xFF0C;&#x6CA1;&#x6709;&#x5728;&#x5185;&#x5B58;&#x91CC;&#x751F;&#x6548;&#xFF0C;&#x6240;&#x4EE5;&#x5FC5;&#x987B;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x6765;&#x52A0;&#x8F7D;&#x53C2;&#x6570;&#x6587;&#x4EF6;&#x4F7F;&#x5176;&#x751F;&#x6548;&#x8FD9;&#x91CC;&#x662F;&#x4E2A;&#x5751;,&#x4E00;&#x65E6;&#x91CD;&#x542F;&#x540E;&#x5C31;&#x4F1A;&#x62A5;&#x9519; 1234SQL&gt; startupORA-00844: Parameter not taking MEMORY_TARGET into accountORA-00851: SGA_MAX_SIZE 52479131648 cannot be set to more than MEMORY_TARGET 27514634240. &#x89E3;&#x51B3;&#x65B9;&#x6CD5;:1234567SQL&gt; create spfile=&apos;H:\data\oradata\spfileorcl_bak.ora&apos; from pfile;&#x6587;&#x4EF6;&#x5DF2;&#x521B;&#x5EFA;&#x3002;SQL&gt; create pfile=&apos;H:\data\oradata\pfileorcl_bak.ora&apos; from spfile;&#x6587;&#x4EF6;&#x5DF2;&#x521B;&#x5EFA;&#x3002; &#x627E;&#x5230;&#x521A;&#x624D;&#x521B;&#x5EFA;&#x7684;&#x6587;&#x4EF6;&#x4FEE;&#x6539;memory_target &#x4F7F;&#x7528;&#x521A;&#x624D;&#x4FEE;&#x6539;&#x7684;Pfile&#x542F;&#x52A8;Oracle 3.db_cache_size&#x53C2;&#x6570;&#x3010;&#x6570;&#x636E;&#x5E93;&#x7F13;&#x51B2;&#x533A;&#x9AD8;&#x901F;&#x7F13;&#x5B58;&#x3011;1alter system set db_cache_size=2000m scope=both; 1&#xFF09;.&#x6B64;&#x53C2;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x52A8;&#x6001;&#x53C2;&#x6570;&#xFF0C;&#x7528;&#x4E8E;&#x7F13;&#x5B58;&#x6570;&#x636E;&#x5E93;&#x4E2D;&#x6B63;&#x5728;&#x4F7F;&#x7528;&#x7684;&#x201C;&#x6709;&#x6548;&#x6570;&#x636E;&#x201D;&#x7684;&#x5185;&#x5B58;&#x533A;&#xFF0C;&#x6B64;&#x5185;&#x5B58;&#x533A;&#x7684;&#x5927;&#x5C0F;&#x5BF9;&#x6570;&#x636E;&#x7684;&#x68C0;&#x7D22;&#x901F;&#x5EA6;&#x6709;&#x5F88;&#x5927;&#x7684;&#x5F71;&#x54CD;&#xFF0C;&#x5982;&#x679C;&#x68C0;&#x7D22;&#x7684;&#x6570;&#x636E;&#x5728;&#x6B64;&#x533A;&#x5185;&#x53EF;&#x4EE5;&#x627E;&#x5230;&#xFF0C;&#x90A3;&#x4E48;&#x8981;&#x6BD4;&#x95F4;&#x63A5;&#x5230;&#x786C;&#x76D8;&#x4E2D;&#x627E;&#x8981;&#x5FEB;&#x7684;&#x591A;&#x3002;&#x6240;&#x4EE5;&#x5728;&#x7CFB;&#x7EDF;&#x7A33;&#x5B9A;&#x540E;&#x53EF;&#x4EE5;&#x9759;&#x6001;&#x8BBE;&#x7F6E;&#x6B64;&#x7F13;&#x51B2;&#x533A;&#x7684;&#x503C;4.scope =&#x3010;memory | spfile | both&#x3011;1&#xFF09;.&#x5982;&#x679C;scope=memory &#x8BF4;&#x660E;&#x4FEE;&#x6539;&#x7684;&#x53C2;&#x6570;&#x53EA;&#x5728;&#x5185;&#x5B58;&#x4E2D;&#x751F;&#x6548;&#xFF0C;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x540E;&#x6062;&#x590D;&#x5230;&#x539F;&#x6765;&#x72B6;&#x6001;&#x503C;&#x3010;&#x7528;&#x4E8E;&#x4FEE;&#x6539;&#x52A8;&#x6001;&#x53C2;&#x6570;&#x3011;2&#xFF09;.&#x5982;&#x679C;scope=spfile &#x8BF4;&#x660E;&#x4FEE;&#x6539;&#x7684;&#x53C2;&#x6570;&#x53EA;&#x5728;&#x53C2;&#x6570;&#x6587;&#x4EF6;&#x4E2D;&#x751F;&#x6548;&#xFF0C;&#x4FEE;&#x6539;&#x540E;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x662F;&#x4E0D;&#x751F;&#x6548;&#x7684;&#xFF0C;&#x5FC5;&#x987B;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x6765;&#x52A0;&#x8F7D;&#x53C2;&#x6570;&#x6587;&#x4EF6;&#x4F7F;&#x5176;&#x751F;&#x6548;&#x3010;&#x7528;&#x4E8E;&#x4FEE;&#x6539;&#x9759;&#x6001;&#x53C2;&#x6570;&#x3011;3&#xFF09;.&#x5982;&#x679C;scope=both &#x8BF4;&#x660E;&#x4FEE;&#x6539;&#x7684;&#x53C2;&#x6570;&#x5728;&#x5F53;&#x524D;&#x73AF;&#x5883;&#xFF08;&#x5185;&#x5B58;&#xFF09;&#x548C;spfile&#xFF08;&#x53C2;&#x6570;&#x6587;&#x4EF6;&#xFF09;&#x90FD;&#x751F;&#x6548;&#xFF0C;both=memory+spfile&#xFF0C;&#x4FEE;&#x6539;&#x540E;&#x5F53;&#x524D;&#x73AF;&#x5883;&#x751F;&#x6548;&#xFF0C;&#x91CD;&#x542F;&#x6570;&#x636E;&#x5E93;&#x540E;&#x4E5F;&#x751F;&#x6548;&#x3002;&#x5C0F;&#x7ED3;&#xFF1A;&#x5F53;&#x6211;&#x4EEC;&#x660E;&#x767D;&#x4E86;&#x8FD9;&#x4E9B;&#x5728;SGA&#x4E2D;&#x5F88;&#x91CD;&#x8981;&#x7684;&#x53C2;&#x6570;&#x65F6;&#xFF0C;&#x624D;&#x80FD;&#x6E38;&#x5203;&#x6709;&#x4F59;&#x7684;&#x5206;&#x914D;&#x6211;&#x4EEC;&#x6709;&#x9650;&#x7684;&#x5185;&#x5B58;&#x7A7A;&#x95F4;&#xFF0C;&#x4F7F;&#x6211;&#x4EEC;&#x7684;&#x7CFB;&#x7EDF;&#x7684;&#x6027;&#x80FD;&#x6700;&#x5927;&#x5316;&#xFF0C;&#x8BA9;oracle&#x8DD1;&#x7684;&#x66F4;&#x5FEB;&#x3001;&#x66F4;&#x597D;&#x3002;&#x76F8;&#x5173;&#x6587;&#x6863;:Oracle&#x7684;Spfile&#x4E0E;pfile &#x70B9;&#x6211;Oeacle&#x5185;&#x5B58;&#x5206;&#x914D;&#x548C;&#x8C03;&#x4F18;&#x70B9;&#x6211; L2Dwidget.init({});]]></content>
      <categories>
        <category>Oracle</category>
      </categories>
      <tags>
        <tag>Oralce</tag>
        <tag>SGA</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Mybatis-Generate反向生成找不到驱动]]></title>
    <url>%2F2018%2F04%2F18%2FGenerate%E5%8F%8D%E5%93%8D%E7%94%9F%E6%88%90%E6%89%BE%E4%B8%8D%E5%88%B0%E9%A9%B1%E5%8A%A8%2F</url>
    <content type="text"><![CDATA[Generate&#x53CD;&#x5411;&#x751F;&#x6210;&#x627E;&#x4E0D;&#x5230;&#x9A71;&#x52A8;1.&#x642D;&#x5EFA;SpringMVC+Mybatis&#x73AF;&#x5883;&#x642D;&#x5EFA;&#x6559;&#x7A0B; &#x70B9;&#x6211; &#x73AF;&#x5883;&#x57FA;&#x672C;&#x642D;&#x5EFA;&#x5B8C;&#x6210;,&#x4F7F;&#x7528;&#x4EE3;&#x7801;&#x751F;&#x6210;&#x5DE5;&#x5177;Generate&#x65F6;&#x4E00;&#x81F4;&#x62A5;&#x9519;,&#x7F3A;&#x5C11;&#x6570;&#x636E;&#x5E93;&#x9A71;&#x52A8; ybatis-generator-maven-plugin:1.3.3:generate failed: Exception getting JDBC Driver: com.mysql.jdbc.Driver &#x62A5;&#x9519;&#x4FE1;&#x606F;123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354[ERROR] Failed to execute goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.2:generate (default-cli) on project SSM_CRUD: Execution default-cli of goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.3:generate failed: Exception getting JDBC Driver: com.mysql.jdbc.Driver -&gt; [Help 1]org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.3:generate (default-cli) on project SSM_CRUD: Execution default-cli of goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.3:generate failed: Exception getting JDBC Driver at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116) at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80) at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51) at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307) at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193) at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106) at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863) at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288) at org.apache.maven.cli.MavenCli.main(MavenCli.java:199) at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) at java.lang.reflect.Method.invoke(Method.java:498) at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289) at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229) at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415) at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356) at org.codehaus.classworlds.Launcher.main(Launcher.java:47)Caused by: org.apache.maven.plugin.PluginExecutionException: Execution default-cli of goal org.mybatis.generator:mybatis-generator-maven-plugin:1.3.3:generate failed: Exception getting JDBC Driver at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:145) at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207) ... 21 moreCaused by: java.lang.RuntimeException: Exception getting JDBC Driver at org.mybatis.generator.internal.db.ConnectionFactory.getDriver(ConnectionFactory.java:85) at org.mybatis.generator.internal.db.ConnectionFactory.getConnection(ConnectionFactory.java:54) at org.mybatis.generator.config.Context.getConnection(Context.java:733) at org.mybatis.generator.config.Context.introspectTables(Context.java:618) at org.mybatis.generator.api.MyBatisGenerator.generate(MyBatisGenerator.java:254) at org.mybatis.generator.api.MyBatisGenerator.generate(MyBatisGenerator.java:188) at org.mybatis.generator.maven.MyBatisGeneratorMojo.execute(MyBatisGeneratorMojo.java:199) at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134) ... 22 moreCaused by: java.lang.ClassNotFoundException: com.mysql.jdbc.Driver at org.codehaus.plexus.classworlds.strategy.SelfFirstStrategy.loadClass(SelfFirstStrategy.java:50) at org.codehaus.plexus.classworlds.realm.ClassRealm.unsynchronizedLoadClass(ClassRealm.java:271) at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:247) at org.codehaus.plexus.classworlds.realm.ClassRealm.loadClass(ClassRealm.java:239) at java.lang.Class.forName0(Native Method) at java.lang.Class.forName(Class.java:348) at org.mybatis.generator.internal.ObjectFactory.internalClassForName(ObjectFactory.java:167) at org.mybatis.generator.internal.ObjectFactory.externalClassForName(ObjectFactory.java:122) at org.mybatis.generator.internal.db.ConnectionFactory.getDriver(ConnectionFactory.java:82) ... 29 more[ERROR] [ERROR] Re-run Maven using the -X switch to enable full debug logging.[ERROR] [ERROR] For more information about the errors and possible solutions, please read the following articles:[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/PluginExecutionException 2.&#x539F;&#x56E0;&#x5206;&#x6790;&#x9996;&#x5148;&#x5728;Meven&#x4E2D;&#x867D;&#x7136;&#x5DF2;&#x7ECF;&#x914D;&#x7F6E;mysql-connector-java,&#x4F46;&#x662F;mybatis-generator&#x5728;&#x8FDE;&#x63A5;&#x6570;&#x636E;&#x5E93;&#x65F6;&#x4F7F;&#x7528;&#x5185;&#x90E8;&#x9A71;&#x52A8;,&#x5982;&#x679C;&#x5185;&#x90E8;&#x672A;&#x914D;&#x7F6E;&#x9A71;&#x52A8;,mybatis-generator&#x662F;&#x4E0D;&#x4F1A;&#x53BB;&#x627E;&#x5916;&#x90E8;&#x9A71;&#x52A8;.&#x56E0;&#x6B64;&#x5C31;&#x4F1A;&#x5305;&#x627E;&#x4E0D;&#x627E;&#x9A71;&#x52A8;&#x7684;&#x5F02;&#x5E38;. 3.&#x89E3;&#x51B3;&#x529E;&#x6CD5;&#x589E;&#x52A0;&#x5185;&#x90E8;&#x9A71;&#x52A8;&#x5305;1234567891011121314151617&lt;plugin&gt; &lt;groupId&gt;org.mybatis.generator&lt;/groupId&gt; &lt;artifactId&gt;mybatis-generator-maven-plugin&lt;/artifactId&gt; &lt;version&gt;1.3.2&lt;/version&gt; &lt;configuration&gt; &lt;verbose&gt;true&lt;/verbose&gt; &lt;overwrite&gt;true&lt;/overwrite&gt; &lt;/configuration&gt; &lt;dependencies&gt; &lt;!--mysql&#x9A71;&#x52A8;&#x5305;--&gt; &lt;dependency&gt; &lt;groupId&gt;mysql&lt;/groupId&gt; &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt; &lt;version&gt;6.0.6&lt;/version&gt; &lt;/dependency&gt; &lt;/dependencies&gt;&lt;/plugin&gt;L2Dwidget.init({});]]></content>
      <categories>
        <category>Exception</category>
      </categories>
      <tags>
        <tag>mybatis-generator</tag>
        <tag>Exception</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[JDK1.5-JDK1.8]新特性]]></title>
    <url>%2F2018%2F04%2F14%2FJDK1-5-JDK1-8%E6%96%B0%E7%89%B9%E6%80%A7%2F</url>
    <content type="text"><![CDATA[JDK1.5&#x65B0;&#x7279;&#x6027;1.&#x81EA;&#x52A8;&#x88C5;&#x7BB1;&#x4E0E;&#x62C6;&#x7BB1; &#x81EA;&#x52A8;&#x88C5;&#x7BB1;: &#x6BCF;&#x5F53;&#x9700;&#x8981;&#x4E00;&#x79CD;&#x7C7B;&#x578B;&#x7684;&#x5BF9;&#x8C61;&#x65F6;,&#x8FD9;&#x79CD;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5C31;&#x81EA;&#x52A8;&#x5730;&#x5C01;&#x88C5;&#x5230;&#x4E0E;&#x4ED6;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x5305;&#x88C5;&#x4E2D;.(&#x81EA;&#x52A8;&#x88C5;&#x7BB1;,&#x53EA;&#x9700;&#x8981;&#x5C06;&#x8BE5;&#x503C;&#x8D4B;&#x7ED9;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x5305;&#x88C5;&#x5668;&#x5F15;&#x7528;,java&#x4F1A;&#x81EA;&#x52A8;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;)&#x81EA;&#x52A8;&#x62C6;&#x7BB1;: &#x6BCF;&#x5F53;&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x503C;&#x65F6;,&#x88AB;&#x88C5;&#x7BB1;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x503C;&#x5C31;&#x88AB;&#x81EA;&#x52A8;&#x7684;&#x53D6;&#x51FA;&#x6765;,&#x4E0D;&#x7528;&#x53BB;&#x8C03;&#x7528;intValue() &#x548C; doubleValue()&#x65B9;&#x6CD5;.(&#x81EA;&#x52A8;&#x62C6;&#x7BB1;,&#x53EA;&#x9700;&#x8981;&#x5C06;&#x8BE5;&#x5BF9;&#x8C61;&#x8D4B;&#x7ED9;&#x4E00;&#x4E2A;&#x57FA;&#x672C;&#x7C7B;&#x578B;&#x5373;&#x53EF;)&#x7C7B;&#x578B;&#x5305;&#x88C5;&#x5668;&#x6709;: Double,Float,Long,Integer,Short,Character&#x548C;Boolean 2.&#x679A;&#x4E3E; &#x628A;&#x96C6;&#x5408;&#x91CC;&#x7684;&#x5BF9;&#x50CF;&#x5143;&#x7D20;&#x4E00;&#x4E00;&#x63D0;&#x53D6;&#x51FA;&#x6765;,&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x4F7F;&#x4EE3;&#x7801;&#x5177;&#x6709;&#x53EF;&#x8BFB;&#x6027;,&#x7406;&#x89E3;&#x6E05;&#x6670;,&#x6613;&#x4E8E;&#x7EF4;&#x62A4;.&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x662F;&#x5F3A;&#x7C7B;&#x578B;&#x7684;,&#x4ECE;&#x800C;&#x4FDD;&#x8BC1;&#x7CFB;&#x7EDF;&#x5B89;&#x5168;&#x6027;,&#x800C;&#x4EE5;&#x7C7B;&#x7684;&#x9759;&#x6001;&#x5B57;&#x6BB5;&#x5B9E;&#x73B0;&#x7C7B;&#x4F3C;&#x66FF;&#x4EE3;&#x6A21;&#x578B;,&#x4E0D;&#x5177;&#x6709;&#x679A;&#x4E3E;&#x7684;&#x7B80;&#x5355;&#x6027;&#x548C;&#x7C7B;&#x578B;&#x5B89;&#x5168;&#x6027;.&#x7B80;&#x5355;&#x7528;&#x6CD5;: javaEnum&#x4E00;&#x822C;&#x7528;&#x4E8E;&#x4EE3;&#x8868;&#x4E00;&#x7EC4;&#x5E38;&#x7528;&#x7684;&#x5E38;&#x91CF;,&#x53EF;&#x7528;&#x6765;&#x4EE3;&#x8868;&#x4E00;&#x7C7B;&#x76F8;&#x540C;&#x7C7B;&#x578B;&#x7684;&#x5E38;&#x91CF;&#x503C;.&#x590D;&#x6742;&#x7528;&#x6CD5;: java&#x4E3A;&#x679A;&#x4E3E;&#x7C7B;&#x578B;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x5185;&#x7F6E;&#x7684;&#x65B9;&#x6CD5;,&#x540C;&#x65F6;&#x679A;&#x4E3E;&#x5E38;&#x91CF;&#x8FD8;&#x53EF;&#x5DF2;&#x6709;&#x81EA;&#x5DF1;&#x7684;&#x65B9;&#x6CD5;.&#x53EF;&#x4EE5;&#x65B9;&#x4FBF;&#x7684;&#x904D;&#x5386;&#x679A;&#x4E3E;&#x5BF9;&#x50CF;. 3.&#x9759;&#x6001;&#x5BFC;&#x5165; &#x901A;&#x8FC7;&#x4F7F;&#x7528;import static ,&#x5C31;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x6307;&#x5B9A;Constants&#x7C7B;&#x540D;&#x800C;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x6210;&#x5458;,&#x5305;&#x62EC;&#x9759;&#x6001;&#x65B9;&#x6CD5;.import xx &#x548C; import static xx &#x7684;&#x533A;&#x522B;&#x662F;,&#x4E3E;&#x4E2A;&#x6817;&#x5B50;&#x524D;&#x8005;&#x4E00;&#x822C;&#x5BFC;&#x5165;&#x7684;&#x662F;&#x7C7B;&#x6587;&#x4EF6;&#x5982; import java.util.Scanner&#x540E;&#x8005;&#x4E00;&#x822C;&#x662F;&#x5BFC;&#x5165;&#x9759;&#x6001;&#x7684;&#x65B9;&#x6CD5;,import static java.long.System.out. 4.&#x53EF;&#x53D8;&#x53C2;&#x6570;(Varargs) &#x53EF;&#x53D8;&#x53C2;&#x6570;&#x7684;&#x7B80;&#x5355;&#x8BED;&#x6CD5;&#x683C;&#x5F0F;&#x4E3A;:metodWord([argumentList],dataType&#x2026; argumentWord); 5.&#x5185;&#x7701;(Introspector) &#x5185;&#x7701;&#x662F;java&#x8BED;&#x8A00;&#x5BF9;Bean&#x7C7B;&#x5C5E;&#x6027;.&#x4E8B;&#x4EF6;&#x7684;&#x4E00;&#x79CD;&#x7F3A;&#x7701;&#x5904;&#x7406;&#x65B9;&#x6CD5;.&#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;A&#x4E2D;&#x6709;&#x5C5E;&#x6027;name,&#x90A3;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;getName,setName&#x6765;&#x5F97;&#x5230;&#x5176;&#x503C;&#x6216;&#x8BBE;&#x7F6E;&#x503C;&#x901A;&#x8FC7;getName/setName&#x6765;&#x8BBF;&#x95EE;name&#x5C5E;&#x6027;,&#x8FD9;&#x5C31;&#x662F;&#x9ED8;&#x8BA4;&#x89C4;&#x5219;.java&#x4E2D;&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x5957;API&#x6765;&#x8BBF;&#x95EE;&#x67D0;&#x4E2A;&#x5C5E;&#x6027;&#x7684;getter/setter&#x65B9;&#x6CD5;,&#x901A;&#x8FC7;&#x8FD9;&#x4E9B;API&#x53EF;&#x4EE5;&#x5FEB;&#x901F;&#x4E86;&#x89E3;&#x8FD9;&#x4E2A;&#x89C4;&#x5219;.&#x8FD9;&#x4E9B;API&#x5B58;&#x653E;java.beans&#x4E2D;. 6.&#x6CDB;&#x578B;(Generic) C++ &#x901A;&#x8FC7;&#x6A21;&#x7248;&#x6280;&#x672F;&#x53EF;&#x4EE5;&#x6307;&#x5B9A;&#x96C6;&#x5408;&#x7684;&#x5143;&#x7D20;&#x7C7B;&#x578B;,&#x800C;&#x5728;java&#x7684;1.5&#x4E4B;&#x524D;&#x6CA1;&#x6709;&#x76F8;&#x5BF9;&#x5E94;&#x7684;&#x529F;&#x80FD;.&#x4E00;&#x4E2A;&#x96C6;&#x5408;&#x53EF;&#x4EE5;&#x653E;&#x4EFB;&#x4F55;&#x7684;&#x5BF9;&#x8C61;,&#x76F8;&#x5E94;&#x7684;&#x4ECE;&#x96C6;&#x5408;&#x91CC;&#x9762;&#x90A3;&#x5BF9;&#x8C61;&#x7684;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x4E0D;&#x5F97;&#x4E0D;&#x8FDB;&#x884C;&#x5F3A;&#x5236;&#x7C7B;&#x578B;&#x8F6C;&#x6362;.&#x5F3A;&#x7C7B;&#x578B;&#x5728;&#x7F16;&#x8BD1;&#x65F6;&#x523B;&#x8FDB;&#x884C;&#x7C7B;&#x578B;&#x68C0;&#x67E5; 7.For-Each&#x5FAA;&#x73AF; For-Each&#x5FAA;&#x73AF;&#x7B80;&#x5316;&#x4E86;&#x96C6;&#x5408;&#x7684;&#x904D;&#x5386; JDK1.6&#x65B0;&#x7279;&#x6027;1.Desktop&#x7C7B;SystemTray&#x7C7B; &#x5728;JDK6&#x4E2D;,AWT&#x65B0;&#x589E;&#x52A0;&#x4E24;&#x4E2A;&#x7C7B;:Desktop&#x548C;SystemTray.&#x524D;&#x8005;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x6253;&#x5F00;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x6D4F;&#x89C8;&#x5668;&#x6D4F;&#x89C8;&#x6307;&#x5B9A;&#x7684;URL,&#x6253;&#x5F00;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x90AE;&#x4EF6;&#x5BA2;&#x6237;&#x7AEF;&#x7ED9;&#x6307;&#x5B9A;&#x7684;&#x90AE;&#x7BB1;&#x53D1;&#x9001;&#x90AE;&#x4EF6;,&#x7528;&#x9ED8;&#x8BA4;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x6253;&#x5F00;&#x6216;&#x7F16;&#x8F91;&#x6587;&#x4EF6;(&#x6BD4;&#x5982;:&#x7528;&#x8BB0;&#x4E8B;&#x672C;&#x6253;&#x5F00;&#x5DF2;&#x4EE5;txt&#x4E3A;&#x540E;&#x7F00;&#x7684;&#x6587;&#x4EF6; ),&#x7528;&#x7CFB;&#x7EDF;&#x9ED8;&#x8BA4;&#x7684;&#x6253;&#x5370;&#x673A;&#x6253;&#x5370;&#x6587;&#x6863;;&#x540E;&#x8005;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x5728;&#x7CFB;&#x7EDF;&#x6258;&#x76D8;&#x533A;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6258;&#x76D8;&#x7A0B;&#x5E8F;. 2.&#x4F7F;&#x7528;JAXB2&#x6765;&#x4E16;&#x5438;&#x7EB3;&#x5BF9;&#x8C61;&#x4E0E;XML&#x4E4B;&#x95F4;&#x7684;&#x6620;&#x5C04; JAXB&#x662F;Java Architecture for XML Binding&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x53EF;&#x4EE5;&#x5C06;&#x4E00;&#x4E2A;Java&#x5BF9;&#x8C61;&#x8F6C;&#x53D8;&#x6210;&#x4E3A;XML&#x683C;&#x5F0F;,&#x53CD;&#x4E4B;&#x4EA6;&#x7136;.&#x6211;&#x4EEC;&#x628A;&#x5BF9;&#x8C61;&#x4E0E;&#x5173;&#x7CFB;&#x6570;&#x636E;&#x5E93;&#x4E4B;&#x95F4;&#x7684;&#x6620;&#x5C04;&#x79F0;&#x4E3A;ORM&#xFF0C;&#x5176;&#x5B9E;&#x4E5F;&#x53EF;&#x4EE5;&#x628A;&#x5BF9;&#x8C61;&#x4E0E;XML&#x4E4B;&#x95F4;&#x7684;&#x6620;&#x5C04;&#x79F0;&#x4E3A;OXM(ObjectXMLMapping)&#x539F;&#x6765;JAXB&#x662F;Java EE&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x5728;JDK6&#x4E2D;&#xFF0C;SUN&#x5C06;&#x5176;&#x653E;&#x5230;&#x4E86;Java SE&#x4E2D;&#xFF0C;&#x8FD9;&#x4E5F;&#x662F;SUN&#x7684;&#x4E00;&#x8D2F;&#x505A;&#x6CD5;&#x3002;JDK6&#x4E2D;&#x81EA;&#x5E26;&#x7684;&#x8FD9;&#x4E2A;JAXB&#x7248;&#x672C;&#x662F;2.0&#xFF0C;&#x6BD4;&#x8D77;1.0(JSR 31)&#x6765;&#xFF0C;JAXB2(JSR 222)&#x7528;JDK5&#x7684;&#x65B0;&#x7279;&#x6027;Annotation&#x6765;&#x6807;&#x8BC6;&#x8981;&#x4F5C;&#x7ED1;&#x5B9A;&#x7684;&#x7C7B;&#x548C;&#x5C5E;&#x6027;&#x7B49;&#xFF0C;&#x8FD9;&#x5C31;&#x6781;&#x5927;&#x7B80;&#x5316;&#x4E86;&#x5F00;&#x53D1;&#x5DE5;&#x4F5C;&#x91CF;&#x5B9E;&#x9645;&#x4E0A;&#xFF0C;&#x5728;Java EE 5.0&#x4E2D;&#xFF0C;EJB&#x548C;Web Services&#x4E5F;&#x901A;&#x8FC7;Annotation&#x6765;&#x7B80;&#x5316;&#x5F00;&#x53D1;&#x5DE5;&#x4F5C;&#x3002;&#x53E6;&#x5916;,JAXB2&#x5728;&#x5E95;&#x5C42;&#x662F;&#x7528;StAX(JSR 173)&#x6765;&#x5904;&#x7406;XML&#x6587;&#x6863;&#x9664;&#x4E86;JAXB&#x4E4B;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;XMLBeans&#x548C;Castor&#x7B49;&#x6765;&#x5B9E;&#x73B0;&#x540C;&#x6837;&#x7684;&#x529F;&#x80FD;&#x3002; 3.&#x7406;&#x89E3;StAX StAX(JSR 173)&#x662F;JDK6.0&#x4E2D;&#x9664;&#x4E86;DOM&#x548C;SAX&#x4E4B;&#x5916;&#x7684;&#x53C8;&#x4E00;&#x79CD;&#x5904;&#x7406;XML&#x6587;&#x6863;&#x7684;API&#x3002;StAX&#x7684;&#x6765;&#x5386;&#xFF1A;&#x5728;JAXP1.3(JSR 206)&#x6709;&#x4E24;&#x79CD;&#x5904;&#x7406;XML&#x6587;&#x6863;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;DOM(Document ObjectModel)&#x548C;SAX(Simple API for XML)&#x3002;&#x7531;&#x4E8E;JDK6.0&#x4E2D;&#x7684;JAXB2(JSR 222)&#x548C;JAX-WS 2.0(JSR 224)&#x90FD;&#x4F1A;&#x7528;&#x5230;StAX&#xFF0C;&#x6240;&#x4EE5;Sun&#x51B3;&#x5B9A;&#x628A;StAX&#x52A0;&#x5165;&#x5230;JAXP&#x5BB6;&#x65CF;&#x5F53;&#x4E2D;&#x6765;&#xFF0C;&#x5E76;&#x5C06;JAXP&#x7684;&#x7248;&#x672C;&#x5347;&#x7EA7;&#x5230;1.4(JAXP1.4&#x662F;JAXP1.3&#x7684;&#x7EF4;&#x62A4;&#x7248;&#x672C;)&#x3002; JDK6&#x91CC;&#x9762;JAXP&#x7684;&#x7248;&#x672C;&#x5C31;&#x662F;1.4&#x3002;StAX&#x662F;The Streaming API for XML&#x7684;&#x7F29;&#x5199;&#xFF0C;&#x4E00;&#x79CD;&#x5229;&#x7528;&#x62C9;&#x6A21;&#x5F0F;&#x89E3;&#x6790;(pull-parsing)XML&#x6587;&#x6863;&#x7684;API.StAX&#x901A;&#x8FC7;&#x63D0;&#x4F9B;&#x4E00;&#x79CD;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x8FED;&#x4EE3;&#x5668;(Iterator)&#x7684;API&#x8BA9;&#x7A0B;&#x5E8F;&#x5458;&#x53BB;&#x63A7;&#x5236;xml&#x6587;&#x6863;&#x89E3;&#x6790;&#x8FC7;&#x7A0B;&#xFF0C;&#x7A0B;&#x5E8F;&#x904D;&#x5386;&#x8FD9;&#x4E2A;&#x4E8B;&#x4EF6;&#x8FED;&#x4EE3;&#x5668;&#x53BB;&#x5904;&#x7406;&#x6BCF;&#x4E00;&#x4E2A;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#xFF0C;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#x53EF;&#x4EE5;&#x770B;&#x505A;&#x662F;&#x7A0B;&#x5E8F;&#x62C9;&#x51FA;&#x6765;&#x7684;&#xFF0C;&#x4E5F;&#x5C31;&#x662F;&#x7A0B;&#x5E8F;&#x4FC3;&#x4F7F;&#x89E3;&#x6790;&#x5668;&#x4EA7;&#x751F;&#x4E00;&#x4E2A;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x5904;&#x7406;&#x8BE5;&#x4E8B;&#x4EF6;&#xFF0C;&#x4E4B;&#x540E;&#x53C8;&#x4FC3;&#x4F7F;&#x89E3;&#x6790;&#x5668;&#x4EA7;&#x751F;&#x4E0B;&#x4E00;&#x4E2A;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#xFF0C;&#x5982;&#x6B64;&#x5FAA;&#x73AF;&#x76F4;&#x5230;&#x78B0;&#x5230;&#x6587;&#x6863;&#x7ED3;&#x675F;&#x7B26;SAX&#x4E5F;&#x662F;&#x57FA;&#x4E8E;&#x4E8B;&#x4EF6;&#x5904;&#x7406;xml&#x6587;&#x6863;&#xFF0C;&#x4F46;&#x5374;&#x662F;&#x7528;&#x63A8;&#x6A21;&#x5F0F;&#x89E3;&#x6790;&#xFF0C;&#x89E3;&#x6790;&#x5668;&#x89E3;&#x6790;&#x5B8C;&#x6574;&#x4E2A;xml&#x6587;&#x6863;&#x540E;&#xFF0C;&#x624D;&#x4EA7;&#x751F;&#x89E3;&#x6790;&#x4E8B;&#x4EF6;&#xFF0C;&#x7136;&#x540E;&#x63A8;&#x7ED9;&#x7A0B;&#x5E8F;&#x53BB;&#x5904;&#x7406;&#x8FD9;&#x4E9B;&#x4E8B;&#x4EF6;&#xFF1B;DOM &#x91C7;&#x7528;&#x7684;&#x65B9;&#x5F0F;&#x662F;&#x5C06;&#x6574;&#x4E2A;xml&#x6587;&#x6863;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x9897;&#x5185;&#x5B58;&#x6811;&#xFF0C;&#x8FD9;&#x6837;&#x5C31;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x5730;&#x5F97;&#x5230;&#x7236;&#x8282;&#x70B9;&#x548C;&#x5B50;&#x7ED3;&#x70B9;&#x4EE5;&#x53CA;&#x5144;&#x5F1F;&#x8282;&#x70B9;&#x7684;&#x6570;&#x636E;&#xFF0C;&#x4F46;&#x5982;&#x679C;&#x6587;&#x6863;&#x5F88;&#x5927;&#xFF0C;&#x5C06;&#x4F1A;&#x4E25;&#x91CD;&#x5F71;&#x54CD;&#x6027;&#x80FD;&#x3002; 4.&#x4F7F;&#x7528;Compiler API &#x73B0;&#x5728;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x7528;JDK6 &#x7684;Compiler API(JSR 199)&#x53BB;&#x52A8;&#x6001;&#x7F16;&#x8BD1;Java&#x6E90;&#x6587;&#x4EF6;&#xFF0C;Compiler API&#x7ED3;&#x5408;&#x53CD;&#x5C04;&#x529F;&#x80FD;&#x5C31;&#x53EF;&#x4EE5;&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x7684;&#x4EA7;&#x751F;Java&#x4EE3;&#x7801;&#x5E76;&#x7F16;&#x8BD1;&#x6267;&#x884C;&#x8FD9;&#x4E9B;&#x4EE3;&#x7801;&#xFF0C;&#x6709;&#x70B9;&#x52A8;&#x6001;&#x8BED;&#x8A00;&#x7684;&#x7279;&#x5F81;&#x3002;&#x8FD9;&#x4E2A;&#x7279;&#x6027;&#x5BF9;&#x4E8E;&#x67D0;&#x4E9B;&#x9700;&#x8981;&#x7528;&#x5230;&#x52A8;&#x6001;&#x7F16;&#x8BD1;&#x7684;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x76F8;&#x5F53;&#x6709;&#x7528;&#xFF0C;&#x6BD4;&#x5982;JSP Web Server&#xFF0C;&#x5F53;&#x6211;&#x4EEC;&#x624B;&#x52A8;&#x4FEE;&#x6539;JSP&#x540E;&#xFF0C;&#x662F;&#x4E0D;&#x5E0C;&#x671B;&#x9700;&#x8981;&#x91CD;&#x542F;Web Server&#x624D;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x6548;&#x679C;&#x7684;&#xFF0C;&#x8FD9;&#x65F6;&#x5019;&#x6211;&#x4EEC;&#x5C31;&#x53EF;&#x4EE5;&#x7528;Compiler API&#x6765;&#x5B9E;&#x73B0;&#x52A8;&#x6001;&#x7F16;&#x8BD1;JSP&#x6587;&#x4EF6;&#xFF0C;&#x5F53;&#x7136;&#xFF0C;&#x73B0;&#x5728;&#x7684;JSP Web Server&#x4E5F;&#x662F;&#x652F;&#x6301;JSP&#x70ED;&#x90E8;&#x7F72;&#x7684;&#xFF0C;&#x73B0;&#x5728;&#x7684;JSP Web Server&#x901A;&#x8FC7;&#x5728;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x901A;&#x8FC7;Runtime.exec&#x6216;ProcessBuilder&#x6765;&#x8C03;&#x7528;javac&#x6765;&#x7F16;&#x8BD1;&#x4EE3;&#x7801;&#xFF0C;&#x8FD9;&#x79CD;&#x65B9;&#x5F0F;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x4EA7;&#x751F;&#x53E6;&#x4E00;&#x4E2A;&#x8FDB;&#x7A0B;&#x53BB;&#x505A;&#x7F16;&#x8BD1;&#x5DE5;&#x4F5C;&#xFF0C;&#x4E0D;&#x591F;&#x4F18;&#x96C5;&#x800C;&#x4E14;&#x5BB9;&#x6613;&#x4F7F;&#x4EE3;&#x7801;&#x4F9D;&#x8D56;&#x4E0E;&#x7279;&#x5B9A;&#x7684;&#x64CD;&#x4F5C;&#x7CFB;&#x7EDF;&#xFF1B;Compiler API&#x901A;&#x8FC7;&#x4E00;&#x5957;&#x6613;&#x7528;&#x7684;&#x6807;&#x51C6;&#x7684;API&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x52A0;&#x4E30;&#x5BCC;&#x7684;&#x65B9;&#x5F0F;&#x53BB;&#x505A;&#x52A8;&#x6001;&#x7F16;&#x8BD1;&#xFF0C;&#x800C;&#x4E14;&#x662F;&#x8DE8;&#x5E73;&#x53F0;&#x7684;&#x3002; 5.&#x8F7B;&#x91CF;&#x7EA7;Http Server API JDK6 &#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;Http Server API,&#x636E;&#x6B64;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x6784;&#x5EFA;&#x81EA;&#x5DF1;&#x7684;&#x5D4C;&#x5165;&#x5F0F;Http Server,&#x5B83;&#x652F;&#x6301;Http&#x548C;Https&#x534F;&#x8BAE;,&#x63D0;&#x4F9B;&#x4E86;HTTP1.1&#x7684;&#x90E8;&#x5206;&#x5B9E;&#x73B0;&#xFF0C;&#x6CA1;&#x6709;&#x88AB;&#x5B9E;&#x73B0;&#x7684;&#x90A3;&#x90E8;&#x5206;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x6269;&#x5C55;&#x5DF2;&#x6709;&#x7684;Http Server API&#x6765;&#x5B9E;&#x73B0;,&#x7A0B;&#x5E8F;&#x5458;&#x5FC5;&#x987B;&#x81EA;&#x5DF1;&#x5B9E;&#x73B0;HttpHandler&#x63A5;&#x53E3;,HttpServer&#x4F1A;&#x8C03;&#x7528;HttpHandler&#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x6765;&#x5904;&#x7406;&#x5BA2;&#x6237;&#x7AEF;&#x8BF7;&#x6C42;&#xFF0C;&#x5728;&#x8FD9;&#x91CC;,&#x6211;&#x4EEC;&#x628A;&#x4E00;&#x4E2A;Http&#x8BF7;&#x6C42;&#x548C;&#x5B83;&#x7684;&#x54CD;&#x5E94;&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x4EA4;&#x6362;,&#x5305;&#x88C5;&#x6210;HttpExchange&#x7C7B;,HttpServer&#x8D1F;&#x8D23;&#x5C06;HttpExchange&#x4F20;&#x7ED9; HttpHandler&#x5B9E;&#x73B0;&#x7C7B;&#x7684;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;. 6.&#x63D2;&#x5165;&#x5F0F;&#x6CE8;&#x89E3;&#x5904;&#x7406;API(Pluggable Annotation Processing API) &#x63D2;&#x5165;&#x5F0F;&#x6CE8;&#x89E3;&#x5904;&#x7406;API(JSR 269)&#x63D0;&#x4F9B;&#x4E00;&#x5957;&#x6807;&#x51C6;API&#x6765;&#x5904;&#x7406;Annotations(JSR 175)&#x5B9E;&#x9645;&#x4E0A;JSR 269&#x4E0D;&#x4EC5;&#x4EC5;&#x7528;&#x6765;&#x5904;&#x7406;Annotation,&#x6211;&#x89C9;&#x5F97;&#x66F4;&#x5F3A;&#x5927;&#x7684;&#x529F;&#x80FD;&#x662F;&#x5B83;&#x5EFA;&#x7ACB;&#x4E86;Java &#x8BED;&#x8A00;&#x672C;&#x8EAB;&#x7684;&#x4E00;&#x4E2A;&#x6A21;&#x578B;,&#x5B83;&#x628A;method, package, constructor, type,variable, enum, annotation&#x7B49;Java&#x8BED;&#x8A00;&#x5143;&#x7D20;&#x6620;&#x5C04;&#x4E3A;Types&#x548C;Elements(&#x4E24;&#x8005;&#x6709;&#x4EC0;&#x4E48;&#x533A;&#x522B;?), &#x4ECE;&#x800C;&#x5C06;Java&#x8BED;&#x8A00;&#x7684;&#x8BED;&#x4E49;&#x6620;&#x5C04;&#x6210;&#x4E3A;&#x5BF9;&#x8C61;, &#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;javax.lang.model&#x5305;&#x4E0B;&#x9762;&#x53EF;&#x4EE5;&#x770B;&#x5230;&#x8FD9;&#x4E9B;&#x7C7B;.&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5229;&#x7528;JSR 269&#x63D0;&#x4F9B;&#x7684;API&#x6765;&#x6784;&#x5EFA;&#x4E00;&#x4E2A;&#x529F;&#x80FD;&#x4E30;&#x5BCC;&#x7684;&#x5143;&#x7F16;&#x7A0B;(metaprogramming)&#x73AF;&#x5883;.JSR 269&#x7528;Annotation Processor&#x5728;&#x7F16;&#x8BD1;&#x671F;&#x95F4;&#x800C;&#x4E0D;&#x662F;&#x8FD0;&#x884C;&#x671F;&#x95F4;&#x5904;&#x7406;Annotation, Annotation Processor&#x76F8;&#x5F53;&#x4E8E;&#x7F16;&#x8BD1;&#x5668;&#x7684;&#x4E00;&#x4E2A;&#x63D2;&#x4EF6;,&#x6240;&#x4EE5;&#x79F0;&#x4E3A;&#x63D2;&#x5165;&#x5F0F;&#x6CE8;&#x89E3;&#x5904;&#x7406;.&#x5982;&#x679C;Annotation Processor&#x5904;&#x7406;Annotation&#x65F6;(&#x6267;&#x884C;process&#x65B9;&#x6CD5;)&#x4EA7;&#x751F;&#x4E86;&#x65B0;&#x7684;Java&#x4EE3;&#x7801;,&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x518D;&#x8C03;&#x7528;&#x4E00;&#x6B21;Annotation Processor,&#x5982;&#x679C;&#x7B2C;&#x4E8C;&#x6B21;&#x5904;&#x7406;&#x8FD8;&#x6709;&#x65B0;&#x4EE3;&#x7801;&#x4EA7;&#x751F;,&#x5C31;&#x4F1A;&#x63A5;&#x7740;&#x8C03;&#x7528;Annotation Processor,&#x76F4;&#x5230;&#x6CA1;&#x6709;&#x65B0;&#x4EE3;&#x7801;&#x4EA7;&#x751F;&#x4E3A;&#x6B62;.&#x6BCF;&#x6267;&#x884C;&#x4E00;&#x6B21;process()&#x65B9;&#x6CD5;&#x88AB;&#x79F0;&#x4E3A;&#x4E00;&#x4E2A;&#x201D;round&#x201D;,&#x8FD9;&#x6837;&#x6574;&#x4E2A;Annotation processing&#x8FC7;&#x7A0B;&#x53EF;&#x4EE5;&#x770B;&#x4F5C;&#x662F;&#x4E00;&#x4E2A;round&#x7684;&#x5E8F;&#x5217;.JSR 269&#x4E3B;&#x8981;&#x88AB;&#x8BBE;&#x8BA1;&#x6210;&#x4E3A;&#x9488;&#x5BF9;Tools&#x6216;&#x8005;&#x5BB9;&#x5668;&#x7684;API. &#x4E3E;&#x4E2A;&#x4F8B;&#x5B50;,&#x6211;&#x4EEC;&#x60F3;&#x5EFA;&#x7ACB;&#x4E00;&#x5957;&#x57FA;&#x4E8E;Annotation&#x7684;&#x5355;&#x5143;&#x6D4B;&#x8BD5;&#x6846;&#x67B6;(&#x5982;TestNG),&#x5728;&#x6D4B;&#x8BD5;&#x7C7B;&#x91CC;&#x9762;&#x7528;Annotation&#x6765;&#x6807;&#x8BC6;&#x6D4B;&#x8BD5;&#x671F;&#x95F4;&#x9700;&#x8981;&#x6267;&#x884C;&#x7684;&#x6D4B;&#x8BD5;&#x65B9;&#x6CD5;&#x3002; 7.&#x7528;Console&#x5F00;&#x53D1;&#x63A7;&#x5236;&#x53F0;&#x7A0B;&#x5E8F; JDK6 &#x4E2D;&#x63D0;&#x4F9B;&#x4E86;java.io.Console &#x7C7B;&#x4E13;&#x7528;&#x6765;&#x8BBF;&#x95EE;&#x57FA;&#x4E8E;&#x5B57;&#x7B26;&#x7684;&#x63A7;&#x5236;&#x53F0;&#x8BBE;&#x5907;. &#x4F60;&#x7684;&#x7A0B;&#x5E8F;&#x5982;&#x679C;&#x8981;&#x4E0E;Windows&#x4E0B;&#x7684;cmd&#x6216;&#x8005;Linux&#x4E0B;&#x7684;Terminal&#x4EA4;&#x4E92;,&#x5C31;&#x53EF;&#x4EE5;&#x7528;Console&#x7C7B;&#x4EE3;&#x52B3;. &#x4F46;&#x6211;&#x4EEC;&#x4E0D;&#x603B;&#x662F;&#x80FD;&#x5F97;&#x5230;&#x53EF;&#x7528;&#x7684;Console, &#x4E00;&#x4E2A;JVM&#x662F;&#x5426;&#x6709;&#x53EF;&#x7528;&#x7684;Console&#x4F9D;&#x8D56;&#x4E8E;&#x5E95;&#x5C42;&#x5E73;&#x53F0;&#x548C;JVM&#x5982;&#x4F55;&#x88AB;&#x8C03;&#x7528;. &#x5982;&#x679C;JVM&#x662F;&#x5728;&#x4EA4;&#x4E92;&#x5F0F;&#x547D;&#x4EE4;&#x884C;(&#x6BD4;&#x5982;Windows&#x7684;cmd)&#x4E2D;&#x542F;&#x52A8;&#x7684;,&#x5E76;&#x4E14;&#x8F93;&#x5165;&#x8F93;&#x51FA;&#x6CA1;&#x6709;&#x91CD;&#x5B9A;&#x5411;&#x5230;&#x53E6;&#x5916;&#x7684;&#x5730;&#x65B9;,&#x90A3;&#x4E48;&#x5C31;&#x53EF;&#x4EE5;&#x5F97;&#x5230;&#x4E00;&#x4E2A;&#x53EF;&#x7528;&#x7684;Console&#x5B9E;&#x4F8B;. 8.&#x5BF9;&#x811A;&#x672C;&#x8BED;&#x8A00;&#x7684;&#x652F;&#x6301;&#x5982;: ruby, groovy, javascript9.Common Annotations Common annotations&#x539F;&#x672C;&#x662F;Java EE 5.0(JSR 244)&#x89C4;&#x8303;&#x7684;&#x4E00;&#x90E8;&#x5206;&#xFF0C;&#x73B0;&#x5728;SUN&#x628A;&#x5B83;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x653E;&#x5230;&#x4E86;Java SE 6.0&#x4E2D;.&#x968F;&#x7740;Annotation&#x5143;&#x6570;&#x636E;&#x529F;&#x80FD;(JSR 175)&#x52A0;&#x5165;&#x5230;Java SE 5.0&#x91CC;&#x9762;&#xFF0C;&#x5F88;&#x591A;Java &#x6280;&#x672F;(&#x6BD4;&#x5982;EJB,Web Services)&#x90FD;&#x4F1A;&#x7528;Annotation&#x90E8;&#x5206;&#x4EE3;&#x66FF;XML&#x6587;&#x4EF6;&#x6765;&#x914D;&#x7F6E;&#x8FD0;&#x884C;&#x53C2;&#x6570;&#xFF08;&#x6216;&#x8005;&#x8BF4;&#x662F;&#x652F;&#x6301;&#x58F0;&#x660E;&#x5F0F;&#x7F16;&#x7A0B;,&#x5982;EJB&#x7684;&#x58F0;&#x660E;&#x5F0F;&#x4E8B;&#x52A1;,&#x5982;&#x679C;&#x8FD9;&#x4E9B;&#x6280;&#x672F;&#x4E3A;&#x901A;&#x7528;&#x76EE;&#x7684;&#x90FD;&#x5355;&#x72EC;&#x5B9A;&#x4E49;&#x4E86;&#x81EA;&#x5DF1;&#x7684;Annotations,&#x663E;&#x7136;&#x6709;&#x70B9;&#x91CD;&#x590D;&#x5EFA;&#x8BBE;, &#x6240;&#x4EE5;,&#x4E3A;&#x5176;&#x4ED6;&#x76F8;&#x5173;&#x7684;Java&#x6280;&#x672F;&#x5B9A;&#x4E49;&#x4E00;&#x5957;&#x516C;&#x5171;&#x7684;Annotation&#x662F;&#x6709;&#x4EF7;&#x503C;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x907F;&#x514D;&#x91CD;&#x590D;&#x5EFA;&#x8BBE;&#x7684;&#x540C;&#x65F6;&#xFF0C;&#x4E5F;&#x4FDD;&#x8BC1;Java SE&#x548C;Java EE &#x5404;&#x79CD;&#x6280;&#x672F;&#x7684;&#x4E00;&#x81F4;&#x6027;. &#x4E0B;&#x9762;&#x5217;&#x4E3E;&#x51FA;Common Annotations 1.0&#x91CC;&#x9762;&#x7684;10&#x4E2A;Annotations Common Annotations Annotation Retention Target Description Generated Source ANNOTATION_TYPE, CONSTRUCTOR, FIELD, LOCAL_VARIABLE, METHOD, PACKAGE, PARAMETER, TYPE &#x7528;&#x4E8E;&#x6807;&#x6CE8;&#x751F;&#x6210;&#x7684;&#x6E90;&#x4EE3;&#x7801; Resource Runtime TYPE, METHOD, FIELD &#x7528;&#x4E8E;&#x6807;&#x6CE8;&#x6240;&#x4F9D;&#x8D56;&#x7684;&#x8D44;&#x6E90;,&#x5BB9;&#x5668;&#x636E;&#x6B64;&#x6CE8;&#x5165;&#x5916;&#x90E8;&#x8D44;&#x6E90;&#x4F9D;&#x8D56;&#xFF0C;&#x6709;&#x57FA;&#x4E8E;&#x5B57;&#x6BB5;&#x7684;&#x6CE8;&#x5165;&#x548C;&#x57FA;&#x4E8E;setter&#x65B9;&#x6CD5;&#x7684;&#x6CE8;&#x5165;&#x4E24;&#x79CD;&#x65B9;&#x5F0F; Resources Runtime TYPE &#x540C;&#x65F6;&#x6807;&#x6CE8;&#x591A;&#x4E2A;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#xFF0C;&#x5BB9;&#x5668;&#x4F1A;&#x628A;&#x6240;&#x6709;&#x8FD9;&#x4E9B;&#x5916;&#x90E8;&#x4F9D;&#x8D56;&#x6CE8;&#x5165; PostConstruct Runtime METHOD &#x6807;&#x6CE8;&#x5F53;&#x5BB9;&#x5668;&#x6CE8;&#x5165;&#x6240;&#x6709;&#x4F9D;&#x8D56;&#x4E4B;&#x540E;&#x8FD0;&#x884C;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x7528;&#x6765;&#x8FDB;&#x884C;&#x4F9D;&#x8D56;&#x6CE8;&#x5165;&#x540E;&#x7684;&#x521D;&#x59CB;&#x5316;&#x5DE5;&#x4F5C;&#xFF0C;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x65B9;&#x6CD5;&#x53EF;&#x4EE5;&#x6807;&#x6CE8;&#x4E3A;PostConstruct PreDestroy Runtime METHOD &#x5F53;&#x5BF9;&#x8C61;&#x5B9E;&#x4F8B;&#x5C06;&#x8981;&#x88AB;&#x4ECE;&#x5BB9;&#x5668;&#x5F53;&#x4E2D;&#x5220;&#x6389;&#x4E4B;&#x524D;&#xFF0C;&#x8981;&#x6267;&#x884C;&#x7684;&#x56DE;&#x8C03;&#x65B9;&#x6CD5;&#x8981;&#x6807;&#x6CE8;&#x4E3A;PreDestroy RunAs Runtime TYPE &#x7528;&#x4E8E;&#x6807;&#x6CE8;&#x7528;&#x4EC0;&#x4E48;&#x5B89;&#x5168;&#x89D2;&#x8272;&#x6765;&#x6267;&#x884C;&#x88AB;&#x6807;&#x6CE8;&#x7C7B;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;&#x8FD9;&#x4E2A;&#x5B89;&#x5168;&#x89D2;&#x8272;&#x5FC5;&#x987B;&#x548C;Container &#x7684;Security&#x89D2;&#x8272;&#x4E00;&#x81F4;&#x7684;&#x3002;RolesAllowed Runtime TYPE, METHOD &#x7528;&#x4E8E;&#x6807;&#x6CE8;&#x5141;&#x8BB8;&#x6267;&#x884C;&#x88AB;&#x6807;&#x6CE8;&#x7C7B;&#x6216;&#x65B9;&#x6CD5;&#x7684;&#x5B89;&#x5168;&#x89D2;&#x8272;&#xFF0C;&#x8FD9;&#x4E2A;&#x5B89;&#x5168;&#x89D2;&#x8272;&#x5FC5;&#x987B;&#x548C;Container &#x7684;Security&#x89D2;&#x8272;&#x4E00;&#x81F4;&#x7684; PermitAll Runtime TYPE, METHOD &#x5141;&#x8BB8;&#x6240;&#x6709;&#x89D2;&#x8272;&#x6267;&#x884C;&#x88AB;&#x6807;&#x6CE8;&#x7684;&#x7C7B;&#x6216;&#x65B9;&#x6CD5; DenyAll Runtime TYPE, METHOD &#x4E0D;&#x5141;&#x8BB8;&#x4EFB;&#x4F55;&#x89D2;&#x8272;&#x6267;&#x884C;&#x88AB;&#x6807;&#x6CE8;&#x7684;&#x7C7B;&#x6216;&#x65B9;&#x6CD5;&#xFF0C;&#x8868;&#x660E;&#x8BE5;&#x7C7B;&#x6216;&#x65B9;&#x6CD5;&#x4E0D;&#x80FD;&#x5728;Java EE&#x5BB9;&#x5668;&#x91CC;&#x9762;&#x8FD0;&#x884C; DeclareRoles Runtime TYPE &#x7528;&#x6765;&#x5B9A;&#x4E49;&#x53EF;&#x4EE5;&#x88AB;&#x5E94;&#x7528;&#x7A0B;&#x5E8F;&#x68C0;&#x9A8C;&#x7684;&#x5B89;&#x5168;&#x89D2;&#x8272;&#xFF0C;&#x901A;&#x5E38;&#x7528;isUserInRole&#x6765;&#x68C0;&#x9A8C;&#x5B89;&#x5168;&#x89D2;&#x8272; &#x6CE8;&#x610F;: RolesAllowed,PermitAll,DenyAll&#x4E0D;&#x80FD;&#x540C;&#x65F6;&#x5E94;&#x7528;&#x5230;&#x4E00;&#x4E2A;&#x7C7B;&#x6216;&#x65B9;&#x6CD5;&#x4E0A; &#x6807;&#x6CE8;&#x5728;&#x65B9;&#x6CD5;&#x4E0A;&#x7684;RolesAllowed,PermitAll,DenyAll&#x4F1A;&#x8986;&#x76D6;&#x6807;&#x6CE8;&#x5728;&#x7C7B;&#x4E0A;&#x7684;RolesAllowed,PermitAll,DenyAll RunAs,RolesAllowed,PermitAll,DenyAll&#x548C;DeclareRoles&#x8FD8;&#x6CA1;&#x6709;&#x52A0;&#x5230;Java SE 6.0&#x4E0A;&#x6765; &#x5904;&#x7406;&#x4EE5;&#x4E0A;Annotations&#x7684;&#x5DE5;&#x4F5C;&#x662F;&#x7531;Java EE&#x5BB9;&#x5668;&#x6765;&#x505A;, Java SE 6.0&#x53EA;&#x662F;&#x5305;&#x542B;&#x4E86;&#x4E0A;&#x9762;&#x8868;&#x683C;&#x7684;&#x524D;&#x4E94;&#x79CD;Annotations&#x7684;&#x5B9A;&#x4E49;&#x7C7B;,&#x5E76;&#x6CA1;&#x6709;&#x5305;&#x542B;&#x5904;&#x7406;&#x8FD9;&#x4E9B;Annotations&#x7684;&#x5F15;&#x64CE;,&#x8FD9;&#x4E2A;&#x5DE5;&#x4F5C;&#x53EF;&#x4EE5;&#x7531;Pluggable Annotation Processing API(JSR 269)&#x6765;&#x505A;&#x6539;&#x52A8;&#x7684;&#x5730;&#x65B9;&#x6700;&#x5927;&#x7684;&#x5C31;&#x662F;java GUI&#x754C;&#x9762;&#x7684;&#x663E;&#x793A;&#x4E86;&#xFF0C;JDK6.0&#xFF08;&#x4E5F;&#x5C31;&#x662F;JDK1.6&#xFF09;&#x652F;&#x6301;&#x6700;&#x65B0;&#x7684;windows vista&#x7CFB;&#x7EDF;&#x7684;Windows Aero&#x89C6;&#x7A97;&#x6548;&#x679C;&#xFF0C;&#x800C;JDK1.5&#x4E0D;&#x652F;&#x6301;&#xFF01;&#xFF01;&#xFF01;&#x4F60;&#x8981;&#x5728;vista&#x73AF;&#x5883;&#x4E0B;&#x7F16;&#x7A0B;&#x7684;&#x8BDD;&#x6700;&#x597D;&#x88C5;jdk6.0&#xFF0C;&#x5426;&#x5219;&#x5B83;&#x603B;&#x662F;&#x6362;&#x5230;windows basic&#x89C6;&#x7A97;&#x6548;&#x679C;. JDK 1.7&#x65B0;&#x7279;&#x6027;1. switch&#x4E2D;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;&#x5B57;&#x4E32;1234567891011String s = &quot;test&quot;; switch (s) { case &quot;test&quot; : System.out.println(&quot;test&quot;);case &quot;test1&quot; : System.out.println(&quot;test1&quot;);break ;default : System.out.println(&quot;break&quot;);break ;} 2. &#x201C;&lt;&gt;&#x201D;&#x7684;&#x8FD0;&#x7528;List tempList = new ArrayList&lt;&gt;(); &#x5373;&#x6CDB;&#x578B;&#x5B9E;&#x4F8B;&#x5316;&#x7C7B;&#x578B;&#x81EA;&#x52A8;&#x63A8;&#x65AD;&#x3002;123456789101112131415161718192021222324252627public class JDK7GenericTest { public static void main(String[] args) { // Pre-JDK 7 List&lt;String&gt; lst1 = new ArrayList&lt;String&gt;(); // JDK 7 supports limited type inference for generic instance creation List&lt;String&gt; lst2 = new ArrayList&lt;&gt;(); lst1.add(&quot;Mon&quot;); lst1.add(&quot;Tue&quot;); lst2.add(&quot;Wed&quot;); lst2.add(&quot;Thu&quot;); for (String item: lst1) { System.out.println(item); } for (String item: lst2) { System.out.println(item); } }} 3. &#x81EA;&#x5B9A;&#x4E49;&#x81EA;&#x52A8;&#x5173;&#x95ED;&#x7C7B;&#x4EE5;&#x4E0B;&#x662F;jdk7 api&#x4E2D;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#xFF08;&#x4E0D;&#x8FC7;&#x6CE8;&#x91CA;&#x592A;&#x957F;&#xFF0C;&#x5220;&#x6389;&#x4E86;close()&#x65B9;&#x6CD5;&#x7684;&#x4E00;&#x90E8;&#x5206;&#x6CE8;&#x91CA;&#xFF09;123456789101112131415/** * A resource that must be closed when it is no longer needed. * * @author Josh Bloch * @since 1.7 */public interface AutoCloseable { /** * Closes this resource, relinquishing any underlying resources. * This method is invoked automatically on objects managed by the * {@code try}-with-resources statement. * */ void close() throws Exception;} &#x53EA;&#x8981;&#x5B9E;&#x73B0;&#x8BE5;&#x63A5;&#x53E3;&#xFF0C;&#x5728;&#x8BE5;&#x7C7B;&#x5BF9;&#x8C61;&#x9500;&#x6BC1;&#x65F6;&#x81EA;&#x52A8;&#x8C03;&#x7528;close&#x65B9;&#x6CD5;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x5728;close&#x65B9;&#x6CD5;&#x5173;&#x95ED;&#x4F60;&#x60F3;&#x5173;&#x95ED;&#x7684;&#x8D44;&#x6E90;&#xFF0C;&#x4F8B;&#x5B50;&#x5982;&#x4E0B;123456789101112131415161718class TryClose implements AutoCloseable { @Override public void close() throws Exception { System.out.println(&quot; Custom close method &#x2026; close resources &quot;); }}//&#x8BF7;&#x770B;jdk&#x81EA;&#x5E26;&#x7C7B;BufferedReader&#x5982;&#x4F55;&#x5B9E;&#x73B0;close&#x65B9;&#x6CD5;&#xFF08;&#x5F53;&#x7136;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x7C7B;&#x4F3C;&#x7C7B;&#x578B;&#x7684;&#x7C7B;&#xFF09; public void close() throws IOException { synchronized (lock) { if (in == null) return; in.close(); in = null; cb = null; } } 4. &#x65B0;&#x589E;&#x4E00;&#x4E9B;&#x53D6;&#x73AF;&#x5883;&#x4FE1;&#x606F;&#x7684;&#x5DE5;&#x5177;&#x65B9;&#x6CD5;123456789File System.getJavaIoTempDir() // IO&#x4E34;&#x65F6;&#x6587;&#x4EF6;&#x5939;File System.getJavaHomeDir() // JRE&#x7684;&#x5B89;&#x88C5;&#x76EE;&#x5F55;File System.getUserHomeDir() // &#x5F53;&#x524D;&#x7528;&#x6237;&#x76EE;&#x5F55;File System.getUserDir() // &#x542F;&#x52A8;java&#x8FDB;&#x7A0B;&#x65F6;&#x6240;&#x5728;&#x7684;&#x76EE;&#x5F55;....... 5. Boolean&#x7C7B;&#x578B;&#x53CD;&#x8F6C;&#xFF0C;&#x7A7A;&#x6307;&#x9488;&#x5B89;&#x5168;&#xFF0C;&#x53C2;&#x4E0E;&#x4F4D;&#x8FD0;&#x7B97;123456789101112131415Boolean Booleans.negate(Boolean booleanObj)True =&gt; False , False =&gt; True, Null =&gt; Nullboolean Booleans.and(boolean[] array)boolean Booleans.or(boolean[] array)boolean Booleans.xor(boolean[] array)boolean Booleans.and(Boolean[] array)boolean Booleans.or(Boolean[] array)boolean Booleans.xor(Boolean[] array) 6. &#x4E24;&#x4E2A;char&#x95F4;&#x7684;equals1boolean Character.equalsIgnoreCase(char ch1, char ch2) 7. &#x5B89;&#x5168;&#x7684;&#x52A0;&#x51CF;&#x4E58;&#x9664;1234567891011121314151617181920212223int Math.safeToInt(long value)int Math.safeNegate(int value)long Math.safeSubtract(long value1, int value2)long Math.safeSubtract(long value1, long value2)int Math.safeMultiply(int value1, int value2)long Math.safeMultiply(long value1, int value2)long Math.safeMultiply(long value1, long value2)long Math.safeNegate(long value)int Math.safeAdd(int value1, int value2)long Math.safeAdd(long value1, int value2)long Math.safeAdd(long value1, long value2)int Math.safeSubtract(int value1, int value2) 8. &#x5BF9;Java&#x96C6;&#x5408;&#xFF08;Collections&#xFF09;&#x7684;&#x589E;&#x5F3A;&#x652F;&#x6301; &#x5728;JDK1.7&#x4E4B;&#x524D;&#x7684;&#x7248;&#x672C;&#x4E2D;&#xFF0C;Java&#x96C6;&#x5408;&#x5BB9;&#x5668;&#x4E2D;&#x5B58;&#x53D6;&#x5143;&#x7D20;&#x7684;&#x5F62;&#x5F0F;&#x5982;&#x4E0B;&#xFF1A;&#x4EE5;List&#x3001;Set&#x3001;Map&#x96C6;&#x5408;&#x5BB9;&#x5668;&#x4E3A;&#x4F8B;&#xFF1A;1234567891011121314151617//&#x521B;&#x5EFA;List&#x63A5;&#x53E3;&#x5BF9;&#x8C61;List&lt;String&gt; list=new ArrayList&lt;String&gt;();list.add(&quot;item&quot;); //&#x7528;add()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5BF9;&#x8C61;String Item=list.get(0); //&#x7528;get()&#x65B9;&#x6CD5;&#x83B7;&#x53D6;&#x5BF9;&#x8C61; //&#x521B;&#x5EFA;Set&#x63A5;&#x53E3;&#x5BF9;&#x8C61;Set&lt;String&gt; set=new HashSet&lt;String&gt;();set.add(&quot;item&quot;); //&#x7528;add()&#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x5BF9;&#x8C61; //&#x521B;&#x5EFA;Map&#x63A5;&#x53E3;&#x5BF9;&#x8C61;Map&lt;String,Integer&gt; map=new HashMap&lt;String,Integer&gt;();map.put(&quot;key&quot;,1); //&#x7528;put()&#x65B9;&#x6CD5;&#x6DFB;&#x52A0;&#x5BF9;&#x8C61;int value=map.get(&quot;key&quot;); &#x5728;JDK1.7&#x4E2D;&#xFF0C;&#x6452;&#x5F03;&#x4E86;Java&#x96C6;&#x5408;&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x73B0;&#x7C7B;&#xFF0C;&#x5982;&#xFF1A;ArrayList&#x3001;HashSet&#x548C;HashMap&#x3002;&#x800C;&#x662F;&#x76F4;&#x63A5;&#x91C7;&#x7528;[]&#x3001;{}&#x7684;&#x5F62;&#x5F0F;&#x5B58;&#x5165;&#x5BF9;&#x8C61;&#xFF0C;&#x91C7;&#x7528;[]&#x7684;&#x5F62;&#x5F0F;&#x6309;&#x7167;&#x7D22;&#x5F15;&#x3001;&#x952E;&#x503C;&#x6765;&#x83B7;&#x53D6;&#x96C6;&#x5408;&#x4E2D;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x5982;&#x4E0B;&#xFF1A;12345List&lt;String&gt; list=[&quot;item&quot;]; //&#x5411;List&#x96C6;&#x5408;&#x4E2D;&#x6DFB;&#x52A0;&#x5143;&#x7D20;String item=list[0]; //&#x4ECE;List&#x96C6;&#x5408;&#x4E2D;&#x83B7;&#x53D6;&#x5143;&#x7D20;Set&lt;String&gt; set={&quot;item&quot;}; //&#x5411;Set&#x96C6;&#x5408;&#x5BF9;&#x8C61;&#x4E2D;&#x6DFB;&#x52A0;&#x5143;&#x7D20;Map&lt;String,Integer&gt; map={&quot;key&quot;:1}; //&#x5411;Map&#x96C6;&#x5408;&#x4E2D;&#x6DFB;&#x52A0;&#x5BF9;&#x8C61;int value=map[&quot;key&quot;]; //&#x4ECE;Map&#x96C6;&#x5408;&#x4E2D;&#x83B7;&#x53D6;&#x5BF9;&#x8C61; 9. &#x6570;&#x503C;&#x53EF;&#x52A0;&#x4E0B;&#x5212;&#x7EBF;1int one_million = 1_000_000; 10. &#x652F;&#x6301;&#x4E8C;&#x8FDB;&#x5236;&#x6587;&#x5B57;1int binary = 0b1001_1001; 11. &#x7B80;&#x5316;&#x4E86;&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x65B9;&#x6CD5;&#x7684;&#x8C03;&#x7528; &#x5F53;&#x7A0B;&#x5E8F;&#x5458;&#x8BD5;&#x56FE;&#x4F7F;&#x7528;&#x4E00;&#x4E2A;&#x4E0D;&#x53EF;&#x5177;&#x4F53;&#x5316;&#x7684;&#x53EF;&#x53D8;&#x53C2;&#x6570;&#x5E76;&#x8C03;&#x7528;&#x4E00;&#x4E2A;varargs &#xFF08;&#x53EF;&#x53D8;&#xFF09;&#x65B9;&#x6CD5;&#x65F6;&#xFF0C;&#x7F16;&#x8F91;&#x5668;&#x4F1A;&#x751F;&#x6210;&#x4E00;&#x4E2A;&#x201C;&#x975E;&#x5B89;&#x5168;&#x64CD;&#x4F5C;&#x201D;&#x7684;&#x8B66;&#x544A;&#x3002; 12. &#x5728;try catch&#x5F02;&#x5E38;&#x6355;&#x6349;&#x4E2D;&#xFF0C;&#x4E00;&#x4E2A;catch&#x53EF;&#x4EE5;&#x5199;&#x591A;&#x4E2A;&#x5F02;&#x5E38;&#x7C7B;&#x578B;&#xFF0C;&#x7528;&#x201D;|&#x201D;&#x9694;&#x5F00;jdk7&#x4E4B;&#x524D;&#xFF1A;1234567try { ......} catch(ClassNotFoundException ex) { ex.printStackTrace();} catch(SQLException ex) { ex.printStackTrace();} jdk7&#x4F8B;:12345try { ......} catch(ClassNotFoundException|SQLException ex) { ex.printStackTrace();} 13. jdk7&#x4E4B;&#x524D;&#xFF0C;&#x4F60;&#x5FC5;&#x987B;&#x7528;try{}finally{}&#x5728;try&#x5185;&#x4F7F;&#x7528;&#x8D44;&#x6E90;&#xFF0C;&#x5728;finally&#x4E2D;&#x5173;&#x95ED;&#x8D44;&#x6E90;&#xFF0C;&#x4E0D;&#x7BA1;try&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x662F;&#x5426;&#x6B63;&#x5E38;&#x9000;&#x51FA;&#x6216;&#x8005;&#x5F02;&#x5E38;&#x9000;&#x51FA;&#x3002;jdk7&#x4E4B;&#x540E;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x4E0D;&#x5FC5;&#x8981;&#x5199;finally&#x8BED;&#x53E5;&#x6765;&#x5173;&#x95ED;&#x8D44;&#x6E90;&#xFF0C;&#x53EA;&#x8981;&#x4F60;&#x5728;try()&#x7684;&#x62EC;&#x53F7;&#x5185;&#x90E8;&#x5B9A;&#x4E49;&#x8981;&#x4F7F;&#x7528;&#x7684;&#x8D44;&#x6E90;jdk7&#x4E4B;&#x524D;&#xFF1A;123456789101112131415161718192021222324252627282930313233import java.io.*;// Copy from one file to another file character by character.// Pre-JDK 7 requires you to close the resources using a finally block.public class FileCopyPreJDK7 { public static void main(String[] args) { BufferedReader in = null; BufferedWriter out = null; try { in = new BufferedReader(new FileReader(&quot;in.txt&quot;)); out = new BufferedWriter(new FileWriter(&quot;out.txt&quot;)); int charRead; while ((charRead = in.read()) != -1) { System.out.printf(&quot;%c &quot;, (char)charRead); out.write(charRead); } } catch (IOException ex) { ex.printStackTrace(); } finally { // always close the streams try { if (in != null) in.close(); if (out != null) out.close(); } catch (IOException ex) { ex.printStackTrace(); } } try { in.read(); // Trigger IOException: Stream closed } catch (IOException ex) { ex.printStackTrace(); } }} jdk7&#x4E4B;&#x540E;&#xFF1A;123456789101112131415161718import java.io.*;// Copy from one file to another file character by character.// JDK 7 has a try-with-resources statement, which ensures that// each resource opened in try() is closed at the end of the statement.public class FileCopyJDK7 { public static void main(String[] args) { try (BufferedReader in = new BufferedReader(new FileReader(&quot;in.txt&quot;)); BufferedWriter out = new BufferedWriter(new FileWriter(&quot;out.txt&quot;))) { int charRead; while ((charRead = in.read()) != -1) { System.out.printf(&quot;%c &quot;, (char)charRead); out.write(charRead); } } catch (IOException ex) { ex.printStackTrace(); } }} JDK1.8 &#x5341;&#x5927;&#x65B0;&#x7279;&#x6027;1. &#x63A5;&#x53E3;&#x7684;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;Java 8&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x7ED9;&#x63A5;&#x53E3;&#x6DFB;&#x52A0;&#x4E00;&#x4E2A;&#x975E;&#x62BD;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#x5B9E;&#x73B0;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528; default&#x5173;&#x952E;&#x5B57;&#x5373;&#x53EF;&#xFF0C;&#x8FD9;&#x4E2A;&#x7279;&#x5F81;&#x53C8;&#x53EB;&#x505A;&#x6269;&#x5C55;&#x65B9;&#x6CD5;123456interface Formula { double calculate(int a); default double sqrt(int a) { return Math.sqrt(a); }} Formula&#x63A5;&#x53E3;&#x5728;&#x62E5;&#x6709;calculate&#x65B9;&#x6CD5;&#x4E4B;&#x5916;&#x540C;&#x65F6;&#x8FD8;&#x5B9A;&#x4E49;&#x4E86;sqrt&#x65B9;&#x6CD5;&#xFF0C;&#x5B9E;&#x73B0;&#x4E86;Formula&#x63A5;&#x53E3;&#x7684;&#x5B50;&#x7C7B;&#x53EA;&#x9700;&#x8981;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;calculate&#x65B9;&#x6CD5;&#xFF0C;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;sqrt&#x5C06;&#x5728;&#x5B50;&#x7C7B;&#x4E0A;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x4F7F;&#x7528;&#x3002;12345678Formula formula = new Formula() { @Override public double calculate(int a) { return sqrt(a * 100); }};formula.calculate(100); // 100.0formula.sqrt(16); // 4.0 &#x6587;&#x4E2D;&#x7684;formula&#x88AB;&#x5B9E;&#x73B0;&#x4E3A;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x7C7B;&#x7684;&#x5B9E;&#x4F8B;&#xFF0C;&#x8BE5;&#x4EE3;&#x7801;&#x975E;&#x5E38;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C;6&#x884C;&#x4EE3;&#x7801;&#x5B9E;&#x73B0;&#x4E86;&#x8BA1;&#x7B97; sqrt(a * 100)&#x3002;&#x5728;&#x4E0B;&#x4E00;&#x8282;&#x4E2D;&#xFF0C;&#x6211;&#x4EEC;&#x5C06;&#x4F1A;&#x770B;&#x5230;&#x5B9E;&#x73B0;&#x5355;&#x65B9;&#x6CD5;&#x63A5;&#x53E3;&#x7684;&#x66F4;&#x7B80;&#x5355;&#x7684;&#x505A;&#x6CD5;&#x3002;&#x6CE8;&#xFF1A; &#x5728;Java&#x4E2D;&#x53EA;&#x6709;&#x5355;&#x7EE7;&#x627F;&#xFF0C;&#x5982;&#x679C;&#x8981;&#x8BA9;&#x4E00;&#x4E2A;&#x7C7B;&#x8D4B;&#x4E88;&#x65B0;&#x7684;&#x7279;&#x6027;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x4F7F;&#x7528;&#x63A5;&#x53E3;&#x6765;&#x5B9E;&#x73B0;&#xFF0C;&#x5728;C++&#x4E2D;&#x652F;&#x6301;&#x591A;&#x7EE7;&#x627F;&#xFF0C;&#x5141;&#x8BB8;&#x4E00;&#x4E2A;&#x5B50;&#x7C7B;&#x540C;&#x65F6;&#x5177;&#x6709;&#x591A;&#x4E2A;&#x7236;&#x7C7B;&#x7684;&#x63A5;&#x53E3;&#x4E0E;&#x529F;&#x80FD;&#xFF0C;&#x5728;&#x5176;&#x4ED6;&#x8BED;&#x8A00;&#x4E2D;&#xFF0C;&#x8BA9;&#x4E00;&#x4E2A;&#x7C7B;&#x540C;&#x65F6;&#x5177;&#x6709;&#x5176;&#x4ED6;&#x7684;&#x53EF;&#x590D;&#x7528;&#x4EE3;&#x7801;&#x7684;&#x65B9;&#x6CD5;&#x53EB;&#x505A;mixin&#x3002;&#x65B0;&#x7684;Java8&#x7684;&#x8FD9;&#x4E2A;&#x7279;&#x65B0;&#x5728;&#x7F16;&#x8BD1;&#x5668;&#x5B9E;&#x73B0;&#x7684;&#x89D2;&#x5EA6;&#x4E0A;&#x6765;&#x8BF4;&#x66F4;&#x52A0;&#x63A5;&#x8FD1;Scala&#x7684;trait&#x3002;&#x5728;C#&#x4E2D;&#x4E5F;&#x6709;&#x540D;&#x4E3A;&#x6269;&#x5C55;&#x65B9;&#x6CD5;&#x7684;&#x6982;&#x5FF5;&#xFF0C;&#x5141;&#x8BB8;&#x7ED9;&#x5DF2;&#x5B58;&#x5728;&#x7684;&#x7C7B;&#x578B;&#x6269;&#x5C55;&#x65B9;&#x6CD5;&#xFF0C;&#x548C;Java8&#x7684;&#x8FD9;&#x4E2A;&#x5728;&#x8BED;&#x4E49;&#x4E0A;&#x6709;&#x5DEE;&#x522B;&#x3002; 2. Lambda &#x8868;&#x8FBE;&#x5F0F;&#x9996;&#x5148;&#x770B;&#x770B;&#x5728;&#x8001;&#x7248;&#x672C;&#x7684;Java&#x4E2D;&#x662F;&#x5982;&#x4F55;&#x6392;&#x5217;&#x5B57;&#x7B26;&#x4E32;&#x7684;&#xFF1A;1234567List&lt;String&gt; names = Arrays.asList(&quot;peter&quot;, &quot;anna&quot;, &quot;mike&quot;, &quot;xenia&quot;);Collections.sort(names, new Comparator&lt;String&gt;() { @Override public int compare(String a, String b) { return b.compareTo(a); }}); &#x53EA;&#x9700;&#x8981;&#x7ED9;&#x9759;&#x6001;&#x65B9;&#x6CD5;Collections.sort&#x4F20;&#x5165;&#x4E00;&#x4E2A;List&#x5BF9;&#x8C61;&#x4EE5;&#x53CA;&#x4E00;&#x4E2A;&#x6BD4;&#x8F83;&#x5668;&#x6765;&#x6309;&#x6307;&#x5B9A;&#x987A;&#x5E8F;&#x6392;&#x5217;&#x3002;&#x901A;&#x5E38;&#x505A;&#x6CD5;&#x90FD;&#x662F;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x533F;&#x540D;&#x7684;&#x6BD4;&#x8F83;&#x5668;&#x5BF9;&#x8C61;&#x7136;&#x540E;&#x5C06;&#x5176;&#x4F20;&#x9012;&#x7ED9;sort&#x65B9;&#x6CD5;&#x3002;&#x5728;Java 8 &#x4E2D;&#x4F60;&#x5C31;&#x6CA1;&#x5FC5;&#x8981;&#x4F7F;&#x7528;&#x8FD9;&#x79CD;&#x4F20;&#x7EDF;&#x7684;&#x533F;&#x540D;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x5F0F;&#x4E86;&#xFF0C;Java8&#x63D0;&#x4F9B;&#x4E86;&#x66F4;&#x7B80;&#x6D01;&#x7684;&#x8BED;&#x6CD5;&#xFF0C;lambda&#x8868;&#x8FBE;&#x5F0F;&#xFF1A;123Collections.sort(names, (String a, String b) -&gt; { return b.compareTo(a);}); &#x4EE3;&#x7801;&#x53D8;&#x5F97;&#x66F4;&#x6BB5;&#x4E14;&#x66F4;&#x5177;&#x6709;&#x53EF;&#x8BFB;&#x6027;&#xFF0C;&#x4F46;&#x662F;&#x5B9E;&#x9645;&#x4E0A;&#x8FD8;&#x53EF;&#x4EE5;&#x5199;&#x5F97;&#x66F4;&#x77ED;&#xFF1A;1Collections.sort(names, (String a, String b) -&gt; b.compareTo(a)); &#x5BF9;&#x4E8E;&#x51FD;&#x6570;&#x4F53;&#x53EA;&#x6709;&#x4E00;&#x884C;&#x4EE3;&#x7801;&#x7684;&#xFF0C;&#x4F60;&#x53EF;&#x4EE5;&#x53BB;&#x6389;&#x5927;&#x62EC;&#x53F7;{}&#x4EE5;&#x53CA;return&#x5173;&#x952E;&#x5B57;&#xFF0C;&#x4F46;&#x662F;&#x4F60;&#x8FD8;&#x53EF;&#x4EE5;&#x5199;&#x5F97;&#x66F4;&#x77ED;&#x70B9;&#xFF1A;1Collections.sort(names, (a, b) -&gt; b.compareTo(a)); ava&#x7F16;&#x8BD1;&#x5668;&#x53EF;&#x4EE5;&#x81EA;&#x52A8;&#x63A8;&#x5BFC;&#x51FA;&#x53C2;&#x6570;&#x7C7B;&#x578B;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x518D;&#x5199;&#x4E00;&#x6B21;&#x7C7B;&#x578B;&#x3002; 3. &#x51FD;&#x6570;&#x5F0F;&#x63A5;&#x53E3;Lambda&#x8868;&#x8FBE;&#x5F0F;&#x662F;&#x5982;&#x4F55;&#x5728;java&#x7684;&#x7C7B;&#x578B;&#x7CFB;&#x7EDF;&#x4E2D;&#x8868;&#x793A;&#x7684;&#x5462;&#xFF1F;&#x6BCF;&#x4E00;&#x4E2A;lambda&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x5BF9;&#x5E94;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#xFF0C;&#x901A;&#x5E38;&#x662F;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#x3002;&#x800C;&#x201C;&#x51FD;&#x6570;&#x5F0F;&#x63A5;&#x53E3;&#x201D;&#x662F;&#x6307;&#x4EC5;&#x4EC5;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#xFF0C;&#x6BCF;&#x4E00;&#x4E2A;&#x8BE5;&#x7C7B;&#x578B;&#x7684;lambda&#x8868;&#x8FBE;&#x5F0F;&#x90FD;&#x4F1A;&#x88AB;&#x5339;&#x914D;&#x5230;&#x8FD9;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x3002;&#x56E0;&#x4E3A; &#x9ED8;&#x8BA4;&#x65B9;&#x6CD5; &#x4E0D;&#x7B97;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#xFF0C;&#x6240;&#x4EE5;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x7ED9;&#x4F60;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x63A5;&#x53E3;&#x6DFB;&#x52A0;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;&#x3002;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5C06;lambda&#x8868;&#x8FBE;&#x5F0F;&#x5F53;&#x4F5C;&#x4EFB;&#x610F;&#x53EA;&#x5305;&#x542B;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#x7C7B;&#x578B;&#xFF0C;&#x786E;&#x4FDD;&#x4F60;&#x7684;&#x63A5;&#x53E3;&#x4E00;&#x5B9A;&#x8FBE;&#x5230;&#x8FD9;&#x4E2A;&#x8981;&#x6C42;&#xFF0C;&#x4F60;&#x53EA;&#x9700;&#x8981;&#x7ED9;&#x4F60;&#x7684;&#x63A5;&#x53E3;&#x6DFB;&#x52A0;@FunctionalInterface&#x6CE8;&#x89E3;&#xFF0C;&#x7F16;&#x8BD1;&#x5668;&#x5982;&#x679C;&#x53D1;&#x73B0;&#x4F60;&#x6807;&#x6CE8;&#x4E86;&#x8FD9;&#x4E2A;&#x6CE8;&#x89E3;&#x7684;&#x63A5;&#x53E3;&#x6709;&#x591A;&#x4E8E;&#x4E00;&#x4E2A;&#x62BD;&#x8C61;&#x65B9;&#x6CD5;&#x7684;&#x65F6;&#x5019;&#x4F1A;&#x62A5;&#x9519;&#x7684;&#x3002;&#x793A;&#x4F8B;&#x5982;&#x4E0B;&#xFF1A;1234567@FunctionalInterfaceinterface Converter&lt;F, T&gt; { T convert(F from);}Converter&lt;String, Integer&gt; converter = (from) -&gt; Integer.valueOf(from);Integer converted = converter.convert(&quot;123&quot;);System.out.println(converted); // 123 &#x9700;&#x8981;&#x6CE8;&#x610F;&#x5982;&#x679C;@FunctionalInterface&#x5982;&#x679C;&#x6CA1;&#x6709;&#x6307;&#x5B9A;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4E5F;&#x662F;&#x5BF9;&#x7684;&#x3002;&#x6CE8;&#xFF1A; &#x5C06;lambda&#x8868;&#x8FBE;&#x5F0F;&#x6620;&#x5C04;&#x5230;&#x4E00;&#x4E2A;&#x5355;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#x4E0A;&#xFF0C;&#x8FD9;&#x79CD;&#x505A;&#x6CD5;&#x5728;Java8&#x4E4B;&#x524D;&#x5C31;&#x6709;&#x522B;&#x7684;&#x8BED;&#x8A00;&#x5B9E;&#x73B0;&#xFF0C;&#x6BD4;&#x5982;Rhino JavaScript&#x89E3;&#x91CA;&#x5668;&#xFF0C;&#x5982;&#x679C;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x53C2;&#x6570;&#x63A5;&#x6536;&#x4E00;&#x4E2A;&#x5355;&#x65B9;&#x6CD5;&#x7684;&#x63A5;&#x53E3;&#x800C;&#x4F60;&#x4F20;&#x9012;&#x7684;&#x662F;&#x4E00;&#x4E2A;function&#xFF0C;Rhino &#x89E3;&#x91CA;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x505A;&#x4E00;&#x4E2A;&#x5355;&#x63A5;&#x53E3;&#x7684;&#x5B9E;&#x4F8B;&#x5230;function&#x7684;&#x9002;&#x914D;&#x5668;&#xFF0C;&#x5178;&#x578B;&#x7684;&#x5E94;&#x7528;&#x573A;&#x666F;&#x6709; org.w3c.dom.events.EventTarget&#x7684;addEventListener&#x7B2C;&#x4E8C;&#x4E2A;&#x53C2;&#x6570;EventListener&#x3002; 4. &#x65B9;&#x6CD5;&#x4E0E;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5F15;&#x7528;&#x524D;&#x4E00;&#x8282;&#x4E2D;&#x7684;&#x4EE3;&#x7801;&#x8FD8;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#x5F15;&#x7528;&#x6765;&#x8868;&#x793A;&#xFF1A;123Converter&lt;String, Integer&gt; converter = Integer::valueOf;Integer converted = converter.convert(&quot;123&quot;);System.out.println(converted); // 123 Java8&#x5141;&#x8BB8;&#x4F60;&#x4F7F;&#x7528; :: &#x5173;&#x952E;&#x5B57;&#x6765;&#x4F20;&#x9012;&#x65B9;&#x6CD5;&#x6216;&#x8005;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5F15;&#x7528;&#xFF0C;&#x4E0A;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x5F15;&#x7528;&#x4E00;&#x4E2A;&#x9759;&#x6001;&#x65B9;&#x6CD5;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x5F15;&#x7528;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;123converter = something::startsWith;String converted = converter.convert(&quot;Java&quot;);System.out.println(converted); // &quot;J&quot; &#x63A5;&#x4E0B;&#x6765;&#x770B;&#x770B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x662F;&#x5982;&#x4F55;&#x4F7F;&#x7528;::&#x5173;&#x952E;&#x5B57;&#x6765;&#x5F15;&#x7528;&#x7684;&#xFF0C;&#x9996;&#x5148;&#x6211;&#x4EEC;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5305;&#x542B;&#x591A;&#x4E2A;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x7B80;&#x5355;&#x7C7B;&#xFF1A;12345678910class Person { String firstName; String lastName; Person() {} Person(String firstName, String lastName) { this.firstName = firstName; this.lastName = lastName; }} &#x63A5;&#x4E0B;&#x6765;&#x6211;&#x4EEC;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x7528;&#x6765;&#x521B;&#x5EFA;Person&#x5BF9;&#x8C61;&#x7684;&#x5BF9;&#x8C61;&#x5DE5;&#x5382;&#x63A5;&#x53E3;&#xFF1A;123interface PersonFactory&lt;P extends Person&gt; { P create(String firstName, String lastName);} &#x8FD9;&#x91CC;&#x6211;&#x4EEC;&#x4F7F;&#x7528;&#x6784;&#x9020;&#x51FD;&#x6570;&#x5F15;&#x7528;&#x6765;&#x5C06;&#x4ED6;&#x4EEC;&#x5173;&#x8054;&#x8D77;&#x6765;&#xFF0C;&#x800C;&#x4E0D;&#x662F;&#x5B9E;&#x73B0;&#x4E00;&#x4E2A;&#x5B8C;&#x6574;&#x7684;&#x5DE5;&#x5382;&#xFF1A;12PersonFactory&lt;Person&gt; personFactory = Person::new;Person person = personFactory.create(&quot;Peter&quot;, &quot;Parker&quot;); &#x6211;&#x4EEC;&#x53EA;&#x9700;&#x8981;&#x4F7F;&#x7528; Person::new &#x6765;&#x83B7;&#x53D6;Person&#x7C7B;&#x6784;&#x9020;&#x51FD;&#x6570;&#x7684;&#x5F15;&#x7528;&#xFF0C;Java&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x81EA;&#x52A8;&#x6839;&#x636E;PersonFactory.create&#x65B9;&#x6CD5;&#x7684;&#x7B7E;&#x540D;&#x6765;&#x9009;&#x62E9;&#x5408;&#x9002;&#x7684;&#x6784;&#x9020;&#x51FD;&#x6570;&#x3002; 5. Lambda &#x4F5C;&#x7528;&#x57DF;&#x5728;lambda&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x4F5C;&#x7528;&#x57DF;&#x548C;&#x8001;&#x7248;&#x672C;&#x7684;&#x533F;&#x540D;&#x5BF9;&#x8C61;&#x4E2D;&#x7684;&#x65B9;&#x5F0F;&#x5F88;&#x76F8;&#x4F3C;&#x3002;&#x4F60;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x8BBF;&#x95EE;&#x6807;&#x8BB0;&#x4E86;final&#x7684;&#x5916;&#x5C42;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF0C;&#x6216;&#x8005;&#x5B9E;&#x4F8B;&#x7684;&#x5B57;&#x6BB5;&#x4EE5;&#x53CA;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x3002; 6. &#x8BBF;&#x95EE;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x5728;lambda&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x8BBF;&#x95EE;&#x5916;&#x5C42;&#x7684;&#x5C40;&#x90E8;&#x53D8;&#x91CF;&#xFF1A;1234final int num = 1;Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num);stringConverter.convert(2); // 3 &#x4F46;&#x662F;&#x548C;&#x533F;&#x540D;&#x5BF9;&#x8C61;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;&#x8FD9;&#x91CC;&#x7684;&#x53D8;&#x91CF;num&#x53EF;&#x4EE5;&#x4E0D;&#x7528;&#x58F0;&#x660E;&#x4E3A;final&#xFF0C;&#x8BE5;&#x4EE3;&#x7801;&#x540C;&#x6837;&#x6B63;&#x786E;&#xFF1A;1234int num = 1;Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num);stringConverter.convert(2); // 3 &#x4E0D;&#x8FC7;&#x8FD9;&#x91CC;&#x7684;num&#x5FC5;&#x987B;&#x4E0D;&#x53EF;&#x88AB;&#x540E;&#x9762;&#x7684;&#x4EE3;&#x7801;&#x4FEE;&#x6539;&#xFF08;&#x5373;&#x9690;&#x6027;&#x7684;&#x5177;&#x6709;final&#x7684;&#x8BED;&#x4E49;&#xFF09;&#xFF0C;&#x4F8B;&#x5982;&#x4E0B;&#x9762;&#x7684;&#x5C31;&#x65E0;&#x6CD5;&#x7F16;&#x8BD1;&#xFF1A;1234int num = 1;Converter&lt;Integer, String&gt; stringConverter = (from) -&gt; String.valueOf(from + num);num = 3; &#x5728;lambda&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x8BD5;&#x56FE;&#x4FEE;&#x6539;num&#x540C;&#x6837;&#x662F;&#x4E0D;&#x5141;&#x8BB8;&#x7684;&#x3002; 7. &#x8BBF;&#x95EE;&#x5BF9;&#x8C61;&#x5B57;&#x6BB5;&#x4E0E;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x548C;&#x672C;&#x5730;&#x53D8;&#x91CF;&#x4E0D;&#x540C;&#x7684;&#x662F;&#xFF0C;lambda&#x5185;&#x90E8;&#x5BF9;&#x4E8E;&#x5B9E;&#x4F8B;&#x7684;&#x5B57;&#x6BB5;&#x4EE5;&#x53CA;&#x9759;&#x6001;&#x53D8;&#x91CF;&#x662F;&#x5373;&#x53EF;&#x8BFB;&#x53C8;&#x53EF;&#x5199;&#x3002;&#x8BE5;&#x884C;&#x4E3A;&#x548C;&#x533F;&#x540D;&#x5BF9;&#x8C61;&#x662F;&#x4E00;&#x81F4;&#x7684;&#xFF1A;123456789101112131415class Lambda4 { static int outerStaticNum; int outerNum; void testScopes() { Converter&lt;Integer, String&gt; stringConverter1 = (from) -&gt; { outerNum = 23; return String.valueOf(from); }; Converter&lt;Integer, String&gt; stringConverter2 = (from) -&gt; { outerStaticNum = 72; return String.valueOf(from); }; }} 8. &#x8BBF;&#x95EE;&#x63A5;&#x53E3;&#x7684;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;&#x8FD8;&#x8BB0;&#x5F97;&#x4E4B;&#x524D;&#x7684;formula&#x4F8B;&#x5B50;&#x4E48;&#xFF0C;&#x63A5;&#x53E3;Formula&#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;sqrt&#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x88AB;formula&#x7684;&#x5B9E;&#x4F8B;&#x5305;&#x62EC;&#x533F;&#x540D;&#x5BF9;&#x8C61;&#x8BBF;&#x95EE;&#x5230;&#xFF0C;&#x4F46;&#x662F;&#x5728;lambda&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x8FD9;&#x4E2A;&#x662F;&#x4E0D;&#x884C;&#x7684;&#x3002;Lambda&#x8868;&#x8FBE;&#x5F0F;&#x4E2D;&#x662F;&#x65E0;&#x6CD5;&#x8BBF;&#x95EE;&#x5230;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;&#x7684;&#xFF0C;&#x4EE5;&#x4E0B;&#x4EE3;&#x7801;&#x5C06;&#x65E0;&#x6CD5;&#x7F16;&#x8BD1;&#xFF1A;12Formula formula = (a) -&gt; sqrt( a * 100);Built-in Functional Interfaces JDK 1.8 API&#x5305;&#x542B;&#x4E86;&#x5F88;&#x591A;&#x5185;&#x5EFA;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x63A5;&#x53E3;&#xFF0C;&#x5728;&#x8001;Java&#x4E2D;&#x5E38;&#x7528;&#x5230;&#x7684;&#x6BD4;&#x5982;Comparator&#x6216;&#x8005;Runnable&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x4E9B;&#x63A5;&#x53E3;&#x90FD;&#x589E;&#x52A0;&#x4E86;@FunctionalInterface&#x6CE8;&#x89E3;&#x4EE5;&#x4FBF;&#x80FD;&#x7528;&#x5728;lambda&#x4E0A;&#x3002;Java 8 API&#x540C;&#x6837;&#x8FD8;&#x63D0;&#x4F9B;&#x4E86;&#x5F88;&#x591A;&#x5168;&#x65B0;&#x7684;&#x51FD;&#x6570;&#x5F0F;&#x63A5;&#x53E3;&#x6765;&#x8BA9;&#x5DE5;&#x4F5C;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#xFF0C;&#x6709;&#x4E00;&#x4E9B;&#x63A5;&#x53E3;&#x662F;&#x6765;&#x81EA;Google Guava&#x5E93;&#x91CC;&#x7684;&#xFF0C;&#x5373;&#x4FBF;&#x4F60;&#x5BF9;&#x8FD9;&#x4E9B;&#x5F88;&#x719F;&#x6089;&#x4E86;&#xFF0C;&#x8FD8;&#x662F;&#x6709;&#x5FC5;&#x8981;&#x770B;&#x770B;&#x8FD9;&#x4E9B;&#x662F;&#x5982;&#x4F55;&#x6269;&#x5C55;&#x5230;lambda&#x4E0A;&#x4F7F;&#x7528;&#x7684;&#x3002; Predicate &#x63A5;&#x53E3;&#x53EA;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;boolean&#x7C7B;&#x578B;&#x3002;&#x8BE5;&#x63A5;&#x53E3;&#x5305;&#x542B;&#x591A;&#x79CD;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;&#x6765;&#x5C06;Predicate&#x7EC4;&#x5408;&#x6210;&#x5176;&#x4ED6;&#x590D;&#x6742;&#x7684;&#x903B;&#x8F91;&#xFF08;&#x6BD4;&#x5982;&#xFF1A;&#x4E0E;&#xFF0C;&#x6216;&#xFF0C;&#x975E;&#xFF09;&#xFF1A;123456789Predicate&lt;String&gt; predicate = (s) -&gt; s.length() &gt; 0;predicate.test(&quot;foo&quot;); // truepredicate.negate().test(&quot;foo&quot;); // falsePredicate&lt;Boolean&gt; nonNull = Objects::nonNull;Predicate&lt;Boolean&gt; isNull = Objects::isNull;Predicate&lt;String&gt; isEmpty = String::isEmpty;Predicate&lt;String&gt; isNotEmpty = isEmpty.negate(); Function &#x63A5;&#x53E3;&#x6709;&#x4E00;&#x4E2A;&#x53C2;&#x6570;&#x5E76;&#x4E14;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x7ED3;&#x679C;&#xFF0C;&#x5E76;&#x9644;&#x5E26;&#x4E86;&#x4E00;&#x4E9B;&#x53EF;&#x4EE5;&#x548C;&#x5176;&#x4ED6;&#x51FD;&#x6570;&#x7EC4;&#x5408;&#x7684;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;&#xFF08;compose, andThen&#xFF09;&#xFF1A;123Function&lt;String, Integer&gt; toInteger = Integer::valueOf;Function&lt;String, String&gt; backToString = toInteger.andThen(String::valueOf);backToString.apply(&quot;123&quot;); // &quot;123&quot; Supplier &#x63A5;&#x53E3;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;&#x4EFB;&#x610F;&#x8303;&#x578B;&#x7684;&#x503C;&#xFF0C;&#x548C;Function&#x63A5;&#x53E3;&#x4E0D;&#x540C;&#x7684;&#x662F;&#x8BE5;&#x63A5;&#x53E3;&#x6CA1;&#x6709;&#x4EFB;&#x4F55;&#x53C2;&#x6570;12Supplier&lt;Person&gt; personSupplier = Person::new;personSupplier.get(); // new Person Consumer &#x63A5;&#x53E3;&#x8868;&#x793A;&#x6267;&#x884C;&#x5728;&#x5355;&#x4E2A;&#x53C2;&#x6570;&#x4E0A;&#x7684;&#x64CD;&#x4F5C;&#x3002;12Consumer&lt;Person&gt; greeter = (p) -&gt; System.out.println(&quot;Hello, &quot; + p.firstName);greeter.accept(new Person(&quot;Luke&quot;, &quot;Skywalker&quot;)); Comparator &#x662F;&#x8001;Java&#x4E2D;&#x7684;&#x7ECF;&#x5178;&#x63A5;&#x53E3;&#xFF0C; Java 8&#x5728;&#x6B64;&#x4E4B;&#x4E0A;&#x6DFB;&#x52A0;&#x4E86;&#x591A;&#x79CD;&#x9ED8;&#x8BA4;&#x65B9;&#x6CD5;123456Comparator&lt;Person&gt; comparator = (p1, p2) -&gt; p1.firstName.compareTo(p2.firstName);Person p1 = new Person(&quot;John&quot;, &quot;Doe&quot;);Person p2 = new Person(&quot;Alice&quot;, &quot;Wonderland&quot;);comparator.compare(p1, p2); // &gt; 0comparator.reversed().compare(p1, p2); // &lt; 0 Optional &#x4E0D;&#x662F;&#x51FD;&#x6570;&#x662F;&#x63A5;&#x53E3;&#xFF0C;&#x8FD9;&#x662F;&#x4E2A;&#x7528;&#x6765;&#x9632;&#x6B62;NullPointerException&#x5F02;&#x5E38;&#x7684;&#x8F85;&#x52A9;&#x7C7B;&#x578B;&#xFF0C;&#x8FD9;&#x662F;&#x4E0B;&#x4E00;&#x5C4A;&#x4E2D;&#x5C06;&#x8981;&#x7528;&#x5230;&#x7684;&#x91CD;&#x8981;&#x6982;&#x5FF5;&#xFF0C;&#x73B0;&#x5728;&#x5148;&#x7B80;&#x5355;&#x7684;&#x770B;&#x770B;&#x8FD9;&#x4E2A;&#x63A5;&#x53E3;&#x80FD;&#x5E72;&#x4EC0;&#x4E48;&#xFF1A; Optional &#x88AB;&#x5B9A;&#x4E49;&#x4E3A;&#x4E00;&#x4E2A;&#x7B80;&#x5355;&#x7684;&#x5BB9;&#x5668;&#xFF0C;&#x5176;&#x503C;&#x53EF;&#x80FD;&#x662F;null&#x6216;&#x8005;&#x4E0D;&#x662F;null&#x3002;&#x5728;Java 8&#x4E4B;&#x524D;&#x4E00;&#x822C;&#x67D0;&#x4E2A;&#x51FD;&#x6570;&#x5E94;&#x8BE5;&#x8FD4;&#x56DE;&#x975E;&#x7A7A;&#x5BF9;&#x8C61;&#x4F46;&#x662F;&#x5076;&#x5C14;&#x5374;&#x53EF;&#x80FD;&#x8FD4;&#x56DE;&#x4E86;null&#xFF0C;&#x800C;&#x5728;Java 8&#x4E2D;&#xFF0C;&#x4E0D;&#x63A8;&#x8350;&#x4F60;&#x8FD4;&#x56DE;null&#x800C;&#x662F;&#x8FD4;&#x56DE;Optional&#x3002;123456Optional&lt;String&gt; optional = Optional.of(&quot;bam&quot;);optional.isPresent(); // trueoptional.get(); // &quot;bam&quot;optional.orElse(&quot;fallback&quot;); // &quot;bam&quot;optional.ifPresent((s) -&gt; System.out.println(s.charAt(0))); // &quot;b&quot; Stream &#x63A5;&#x53E3; java.util.Stream &#x8868;&#x793A;&#x80FD;&#x5E94;&#x7528;&#x5728;&#x4E00;&#x7EC4;&#x5143;&#x7D20;&#x4E0A;&#x4E00;&#x6B21;&#x6267;&#x884C;&#x7684;&#x64CD;&#x4F5C;&#x5E8F;&#x5217;&#x3002;Stream &#x64CD;&#x4F5C;&#x5206;&#x4E3A;&#x4E2D;&#x95F4;&#x64CD;&#x4F5C;&#x6216;&#x8005;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#x4E24;&#x79CD;&#xFF0C;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;&#x4E00;&#x7279;&#x5B9A;&#x7C7B;&#x578B;&#x7684;&#x8BA1;&#x7B97;&#x7ED3;&#x679C;&#xFF0C;&#x800C;&#x4E2D;&#x95F4;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;Stream&#x672C;&#x8EAB;&#xFF0C;&#x8FD9;&#x6837;&#x4F60;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x591A;&#x4E2A;&#x64CD;&#x4F5C;&#x4F9D;&#x6B21;&#x4E32;&#x8D77;&#x6765;&#x3002;Stream &#x7684;&#x521B;&#x5EFA;&#x9700;&#x8981;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x6BD4;&#x5982; java.util.Collection&#x7684;&#x5B50;&#x7C7B;&#xFF0C;List&#x6216;&#x8005;Set&#xFF0C; Map&#x4E0D;&#x652F;&#x6301;&#x3002;Stream&#x7684;&#x64CD;&#x4F5C;&#x53EF;&#x4EE5;&#x4E32;&#x884C;&#x6267;&#x884C;&#x6216;&#x8005;&#x5E76;&#x884C;&#x6267;&#x884C;&#x3002; &#x9996;&#x5148;&#x770B;&#x770B;Stream&#x662F;&#x600E;&#x4E48;&#x7528;&#xFF0C;&#x9996;&#x5148;&#x521B;&#x5EFA;&#x5B9E;&#x4F8B;&#x4EE3;&#x7801;&#x7684;&#x7528;&#x5230;&#x7684;&#x6570;&#x636E;List&#xFF1A;123456789List&lt;String&gt; stringCollection = new ArrayList&lt;&gt;();stringCollection.add(&quot;ddd2&quot;);stringCollection.add(&quot;aaa2&quot;);stringCollection.add(&quot;bbb1&quot;);stringCollection.add(&quot;aaa1&quot;);stringCollection.add(&quot;bbb3&quot;);stringCollection.add(&quot;ccc&quot;);stringCollection.add(&quot;bbb2&quot;);stringCollection.add(&quot;ddd1&quot;); Java 8&#x6269;&#x5C55;&#x4E86;&#x96C6;&#x5408;&#x7C7B;&#xFF0C;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; Collection.stream() &#x6216;&#x8005; Collection.parallelStream() &#x6765;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;Stream&#x3002; Filter &#x8FC7;&#x6EE4;&#x8FC7;&#x6EE4;&#x901A;&#x8FC7;&#x4E00;&#x4E2A;predicate&#x63A5;&#x53E3;&#x6765;&#x8FC7;&#x6EE4;&#x5E76;&#x53EA;&#x4FDD;&#x7559;&#x7B26;&#x5408;&#x6761;&#x4EF6;&#x7684;&#x5143;&#x7D20;&#xFF0C;&#x8BE5;&#x64CD;&#x4F5C;&#x5C5E;&#x4E8E;&#x4E2D;&#x95F4;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x53EF;&#x4EE5;&#x5728;&#x8FC7;&#x6EE4;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x6765;&#x5E94;&#x7528;&#x5176;&#x4ED6;Stream&#x64CD;&#x4F5C; &#xFF08;&#x6BD4;&#x5982;forEach&#xFF09;&#x3002;forEach&#x9700;&#x8981;&#x4E00;&#x4E2A;&#x51FD;&#x6570;&#x6765;&#x5BF9;&#x8FC7;&#x6EE4;&#x540E;&#x7684;&#x5143;&#x7D20;&#x4F9D;&#x6B21;&#x6267;&#x884C;&#x3002;forEach&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#xFF0C;&#x6240;&#x4EE5;&#x6211;&#x4EEC;&#x4E0D;&#x80FD;&#x5728;forEach&#x4E4B;&#x540E;&#x6765;&#x6267;&#x884C; &#x5176;&#x4ED6;Stream&#x64CD;&#x4F5C;&#x3002;12345stringCollection .stream() .filter((s) -&gt; s.startsWith(&quot;a&quot;)) .forEach(System.out::println);// &quot;aaa2&quot;, &quot;aaa1&quot; Sort &#x6392;&#x5E8F;&#x6392;&#x5E8F;&#x662F;&#x4E00;&#x4E2A;&#x4E2D;&#x95F4;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD4;&#x56DE;&#x7684;&#x662F;&#x6392;&#x5E8F;&#x597D;&#x540E;&#x7684;Stream&#x3002;&#x5982;&#x679C;&#x4F60;&#x4E0D;&#x6307;&#x5B9A;&#x4E00;&#x4E2A;&#x81EA;&#x5B9A;&#x4E49;&#x7684;Comparator&#x5219;&#x4F1A;&#x4F7F;&#x7528;&#x9ED8;&#x8BA4;&#x6392;&#x5E8F;&#x3002;123456stringCollection .stream() .sorted() .filter((s) -&gt; s.startsWith(&quot;a&quot;)) .forEach(System.out::println);// &quot;aaa1&quot;, &quot;aaa2&quot; &#x9700;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#xFF0C;&#x6392;&#x5E8F;&#x53EA;&#x521B;&#x5EFA;&#x4E86;&#x4E00;&#x4E2A;&#x6392;&#x5217;&#x597D;&#x540E;&#x7684;Stream&#xFF0C;&#x800C;&#x4E0D;&#x4F1A;&#x5F71;&#x54CD;&#x539F;&#x6709;&#x7684;&#x6570;&#x636E;&#x6E90;&#xFF0C;&#x6392;&#x5E8F;&#x4E4B;&#x540E;&#x539F;&#x6570;&#x636E;stringCollection&#x662F;&#x4E0D;&#x4F1A;&#x88AB;&#x4FEE;&#x6539;&#x7684;12System.out.println(stringCollection);// ddd2, aaa2, bbb1, aaa1, bbb3, ccc, bbb2, ddd1 Map &#x6620;&#x5C04;&#x4E2D;&#x95F4;&#x64CD;&#x4F5C;map&#x4F1A;&#x5C06;&#x5143;&#x7D20;&#x6839;&#x636E;&#x6307;&#x5B9A;&#x7684;Function&#x63A5;&#x53E3;&#x6765;&#x4F9D;&#x6B21;&#x5C06;&#x5143;&#x7D20;&#x8F6C;&#x6210;&#x53E6;&#x5916;&#x7684;&#x5BF9;&#x8C61;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x793A;&#x4F8B;&#x5C55;&#x793A;&#x4E86;&#x5C06;&#x5B57;&#x7B26;&#x4E32;&#x8F6C;&#x6362;&#x4E3A;&#x5927;&#x5199;&#x5B57;&#x7B26;&#x4E32;&#x3002;&#x4F60;&#x4E5F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7;map&#x6765;&#x8BB2;&#x5BF9;&#x8C61;&#x8F6C;&#x6362;&#x6210;&#x5176;&#x4ED6;&#x7C7B;&#x578B;&#xFF0C;map&#x8FD4;&#x56DE;&#x7684;Stream&#x7C7B;&#x578B;&#x662F;&#x6839;&#x636E;&#x4F60;map&#x4F20;&#x9012;&#x8FDB;&#x53BB;&#x7684;&#x51FD;&#x6570;&#x7684;&#x8FD4;&#x56DE;&#x503C;&#x51B3;&#x5B9A;&#x7684;&#x3002;123456stringCollection .stream() .map(String::toUpperCase) .sorted((a, b) -&gt; b.compareTo(a)) .forEach(System.out::println);// &quot;DDD2&quot;, &quot;DDD1&quot;, &quot;CCC&quot;, &quot;BBB3&quot;, &quot;BBB2&quot;, &quot;AAA2&quot;, &quot;AAA1&quot; Match &#x5339;&#x914D; Stream&#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5339;&#x914D;&#x64CD;&#x4F5C;&#xFF0C;&#x5141;&#x8BB8;&#x68C0;&#x6D4B;&#x6307;&#x5B9A;&#x7684;Predicate&#x662F;&#x5426;&#x5339;&#x914D;&#x6574;&#x4E2A;Stream&#x3002;&#x6240;&#x6709;&#x7684;&#x5339;&#x914D;&#x64CD;&#x4F5C;&#x90FD;&#x662F;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#xFF0C;&#x5E76;&#x8FD4;&#x56DE;&#x4E00;&#x4E2A;boolean&#x7C7B;&#x578B;&#x7684;&#x503C;&#x3002;12345678910111213141516171819boolean anyStartsWithA = stringCollection .stream() .anyMatch((s) -&gt; s.startsWith(&quot;a&quot;));System.out.println(anyStartsWithA); // trueboolean allStartsWithA = stringCollection .stream() .allMatch((s) -&gt; s.startsWith(&quot;a&quot;));System.out.println(allStartsWithA); // falseboolean noneStartsWithZ = stringCollection .stream() .noneMatch((s) -&gt; s.startsWith(&quot;z&quot;));System.out.println(noneStartsWithZ); // true Count &#x8BA1;&#x6570;&#x8BA1;&#x6570;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#xFF0C;&#x8FD4;&#x56DE;Stream&#x4E2D;&#x5143;&#x7D20;&#x7684;&#x4E2A;&#x6570;&#xFF0C;&#x8FD4;&#x56DE;&#x503C;&#x7C7B;&#x578B;&#x662F;long&#x3002;123456long startsWithB = stringCollection .stream() .filter((s) -&gt; s.startsWith(&quot;b&quot;)) .count();System.out.println(startsWithB); // 3 Reduce &#x89C4;&#x7EA6;&#x8FD9;&#x662F;&#x4E00;&#x4E2A;&#x6700;&#x7EC8;&#x64CD;&#x4F5C;&#xFF0C;&#x5141;&#x8BB8;&#x901A;&#x8FC7;&#x6307;&#x5B9A;&#x7684;&#x51FD;&#x6570;&#x6765;&#x8BB2;stream&#x4E2D;&#x7684;&#x591A;&#x4E2A;&#x5143;&#x7D20;&#x89C4;&#x7EA6;&#x4E3A;&#x4E00;&#x4E2A;&#x5143;&#x7D20;&#xFF0C;&#x89C4;&#x8D8A;&#x540E;&#x7684;&#x7ED3;&#x679C;&#x662F;&#x901A;&#x8FC7;Optional&#x63A5;&#x53E3;&#x8868;&#x793A;&#x7684;&#xFF1A;1234567Optional&lt;String&gt; reduced = stringCollection .stream() .sorted() .reduce((s1, s2) -&gt; s1 + &quot;#&quot; + s2);reduced.ifPresent(System.out::println);// &quot;aaa1#aaa2#bbb1#bbb2#bbb3#ccc#ddd1#ddd2&quot; &#x5E76;&#x884C;Streams &#x524D;&#x9762;&#x63D0;&#x5230;&#x8FC7;Stream&#x6709;&#x4E32;&#x884C;&#x548C;&#x5E76;&#x884C;&#x4E24;&#x79CD;&#xFF0C;&#x4E32;&#x884C;Stream&#x4E0A;&#x7684;&#x64CD;&#x4F5C;&#x662F;&#x5728;&#x4E00;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E2D;&#x4F9D;&#x6B21;&#x5B8C;&#x6210;&#xFF0C;&#x800C;&#x5E76;&#x884C;Stream&#x5219;&#x662F;&#x5728;&#x591A;&#x4E2A;&#x7EBF;&#x7A0B;&#x4E0A;&#x540C;&#x65F6;&#x6267;&#x884C;&#x3002; &#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;&#x662F;&#x5982;&#x4F55;&#x901A;&#x8FC7;&#x5E76;&#x884C;Stream&#x6765;&#x63D0;&#x5347;&#x6027;&#x80FD;&#xFF1A; &#x9996;&#x5148;&#x6211;&#x4EEC;&#x521B;&#x5EFA;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x91CD;&#x590D;&#x5143;&#x7D20;&#x7684;&#x5927;&#x8868;&#xFF1A;123456int max = 1000000;List&lt;String&gt; values = new ArrayList&lt;&gt;(max);for (int i = 0; i &lt; max; i++) { UUID uuid = UUID.randomUUID(); values.add(uuid.toString());} &#x7136;&#x540E;&#x6211;&#x4EEC;&#x8BA1;&#x7B97;&#x4E00;&#x4E0B;&#x6392;&#x5E8F;&#x8FD9;&#x4E2A;Stream&#x8981;&#x8017;&#x65F6;&#x591A;&#x4E45;&#xFF0C;&#x4E32;&#x884C;&#x6392;&#x5E8F;&#xFF1A;123456789long t0 = System.nanoTime();long count = values.stream().sorted().count();System.out.println(count);long t1 = System.nanoTime();long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);System.out.println(String.format(&quot;sequential sort took: %d ms&quot;, millis));// &#x4E32;&#x884C;&#x8017;&#x65F6;: 899 ms &#x5E76;&#x884C;&#x6392;&#x5E8F;&#xFF1A;12345678910long t0 = System.nanoTime();long count = values.parallelStream().sorted().count();System.out.println(count);long t1 = System.nanoTime();long millis = TimeUnit.NANOSECONDS.toMillis(t1 - t0);System.out.println(String.format(&quot;parallel sort took: %d ms&quot;, millis));// &#x5E76;&#x884C;&#x6392;&#x5E8F;&#x8017;&#x65F6;: 472 ms &#x4E0A;&#x9762;&#x4E24;&#x4E2A;&#x4EE3;&#x7801;&#x51E0;&#x4E4E;&#x662F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x4F46;&#x662F;&#x5E76;&#x884C;&#x7248;&#x7684;&#x5FEB;&#x4E86;50%&#x4E4B;&#x591A;&#xFF0C;&#x552F;&#x4E00;&#x9700;&#x8981;&#x505A;&#x7684;&#x6539;&#x52A8;&#x5C31;&#x662F;&#x5C06;stream()&#x6539;&#x4E3A;parallelStream()&#x3002; MapMap&#x7C7B;&#x578B;&#x4E0D;&#x652F;&#x6301;stream&#xFF0C;&#x4E0D;&#x8FC7;Map&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x65B0;&#x7684;&#x6709;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#x6765;&#x5904;&#x7406;&#x4E00;&#x4E9B;&#x65E5;&#x5E38;&#x4EFB;&#x52A1;&#x3002;12345Map&lt;Integer, String&gt; map = new HashMap&lt;&gt;();for (int i = 0; i &lt; 10; i++) { map.putIfAbsent(i, &quot;val&quot; + i);}map.forEach((id, val) -&gt; System.out.println(val)); &#x4EE5;&#x4E0A;&#x4EE3;&#x7801;&#x5F88;&#x5BB9;&#x6613;&#x7406;&#x89E3;&#xFF0C; putIfAbsent &#x4E0D;&#x9700;&#x8981;&#x6211;&#x4EEC;&#x505A;&#x989D;&#x5916;&#x7684;&#x5B58;&#x5728;&#x6027;&#x68C0;&#x67E5;&#xFF0C;&#x800C;forEach&#x5219;&#x63A5;&#x6536;&#x4E00;&#x4E2A;Consumer&#x63A5;&#x53E3;&#x6765;&#x5BF9;map&#x91CC;&#x7684;&#x6BCF;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5BF9;&#x8FDB;&#x884C;&#x64CD;&#x4F5C;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;map&#x4E0A;&#x7684;&#x5176;&#x4ED6;&#x6709;&#x7528;&#x7684;&#x51FD;&#x6570;&#xFF1A;12345678910map.computeIfPresent(3, (num, val) -&gt; val + num);map.get(3); // val33map.computeIfPresent(9, (num, val) -&gt; null);map.containsKey(9); // falsemap.computeIfAbsent(23, num -&gt; &quot;val&quot; + num);map.containsKey(23); // truemap.computeIfAbsent(3, num -&gt; &quot;bam&quot;);map.get(3); // val33 &#x63A5;&#x4E0B;&#x6765;&#x5C55;&#x793A;&#x5982;&#x4F55;&#x5728;Map&#x91CC;&#x5220;&#x9664;&#x4E00;&#x4E2A;&#x952E;&#x503C;&#x5168;&#x90FD;&#x5339;&#x914D;&#x7684;&#x9879;&#xFF1A;1234map.remove(3, &quot;val3&quot;);map.get(3); // val33map.remove(3, &quot;val33&quot;);map.get(3); // null &#x53E6;&#x5916;&#x4E00;&#x4E2A;&#x6709;&#x7528;&#x7684;&#x65B9;&#x6CD5;&#xFF1A;1map.getOrDefault(42, &quot;not found&quot;); // not found &#x5BF9;Map&#x7684;&#x5143;&#x7D20;&#x505A;&#x5408;&#x5E76;&#x4E5F;&#x53D8;&#x5F97;&#x5F88;&#x5BB9;&#x6613;&#x4E86;&#xFF1A;1234map.merge(9, &quot;val9&quot;, (value, newValue) -&gt; value.concat(newValue));map.get(9); // val9map.merge(9, &quot;concat&quot;, (value, newValue) -&gt; value.concat(newValue));map.get(9); // val9concat Merge&#x505A;&#x7684;&#x4E8B;&#x60C5;&#x662F;&#x5982;&#x679C;&#x952E;&#x540D;&#x4E0D;&#x5B58;&#x5728;&#x5219;&#x63D2;&#x5165;&#xFF0C;&#x5426;&#x5219;&#x5219;&#x5BF9;&#x539F;&#x952E;&#x5BF9;&#x5E94;&#x7684;&#x503C;&#x505A;&#x5408;&#x5E76;&#x64CD;&#x4F5C;&#x5E76;&#x91CD;&#x65B0;&#x63D2;&#x5165;&#x5230;map&#x4E2D;&#x3002; 9. Date APIJava 8 &#x5728;&#x5305;java.time&#x4E0B;&#x5305;&#x542B;&#x4E86;&#x4E00;&#x7EC4;&#x5168;&#x65B0;&#x7684;&#x65F6;&#x95F4;&#x65E5;&#x671F;API&#x3002;&#x65B0;&#x7684;&#x65E5;&#x671F;API&#x548C;&#x5F00;&#x6E90;&#x7684;Joda-Time&#x5E93;&#x5DEE;&#x4E0D;&#x591A;&#xFF0C;&#x4F46;&#x53C8;&#x4E0D;&#x5B8C;&#x5168;&#x4E00;&#x6837;&#xFF0C;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;&#x8FD9;&#x7EC4;&#x65B0;API&#x91CC;&#x6700;&#x91CD;&#x8981;&#x7684;&#x4E00;&#x4E9B;&#x90E8;&#x5206;&#xFF1A;Clock &#x65F6;&#x949F; Clock&#x7C7B;&#x63D0;&#x4F9B;&#x4E86;&#x8BBF;&#x95EE;&#x5F53;&#x524D;&#x65E5;&#x671F;&#x548C;&#x65F6;&#x95F4;&#x7684;&#x65B9;&#x6CD5;&#xFF0C;Clock&#x662F;&#x65F6;&#x533A;&#x654F;&#x611F;&#x7684;&#xFF0C;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x53D6;&#x4EE3; System.currentTimeMillis() &#x6765;&#x83B7;&#x53D6;&#x5F53;&#x524D;&#x7684;&#x5FAE;&#x79D2;&#x6570;&#x3002;&#x67D0;&#x4E00;&#x4E2A;&#x7279;&#x5B9A;&#x7684;&#x65F6;&#x95F4;&#x70B9;&#x4E5F;&#x53EF;&#x4EE5;&#x4F7F;&#x7528;Instant&#x7C7B;&#x6765;&#x8868;&#x793A;&#xFF0C;Instant&#x7C7B;&#x4E5F;&#x53EF;&#x4EE5;&#x7528;&#x6765;&#x521B;&#x5EFA;&#x8001;&#x7684;java.util.Date&#x5BF9;&#x8C61;&#x3002;1234Clock clock = Clock.systemDefaultZone();long millis = clock.millis();Instant instant = clock.instant();Date legacyDate = Date.from(instant); // legacy java.util.Date Timezones &#x65F6;&#x533A;&#x5728;&#x65B0;API&#x4E2D;&#x65F6;&#x533A;&#x4F7F;&#x7528;ZoneId&#x6765;&#x8868;&#x793A;&#x3002;&#x65F6;&#x533A;&#x53EF;&#x4EE5;&#x5F88;&#x65B9;&#x4FBF;&#x7684;&#x4F7F;&#x7528;&#x9759;&#x6001;&#x65B9;&#x6CD5;of&#x6765;&#x83B7;&#x53D6;&#x5230;&#x3002; &#x65F6;&#x533A;&#x5B9A;&#x4E49;&#x4E86;&#x5230;UTS&#x65F6;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x5DEE;&#xFF0C;&#x5728;Instant&#x65F6;&#x95F4;&#x70B9;&#x5BF9;&#x8C61;&#x5230;&#x672C;&#x5730;&#x65E5;&#x671F;&#x5BF9;&#x8C61;&#x4E4B;&#x95F4;&#x8F6C;&#x6362;&#x7684;&#x65F6;&#x5019;&#x662F;&#x6781;&#x5176;&#x91CD;&#x8981;&#x7684;&#x3002;12345678System.out.println(ZoneId.getAvailableZoneIds());// prints all available timezone idsZoneId zone1 = ZoneId.of(&quot;Europe/Berlin&quot;);ZoneId zone2 = ZoneId.of(&quot;Brazil/East&quot;);System.out.println(zone1.getRules());System.out.println(zone2.getRules());// ZoneRules[currentStandardOffset=+01:00]// ZoneRules[currentStandardOffset=-03:00] LocalTime &#x672C;&#x5730;&#x65F6;&#x95F4;LocalTime &#x5B9A;&#x4E49;&#x4E86;&#x4E00;&#x4E2A;&#x6CA1;&#x6709;&#x65F6;&#x533A;&#x4FE1;&#x606F;&#x7684;&#x65F6;&#x95F4;&#xFF0C;&#x4F8B;&#x5982; &#x665A;&#x4E0A;10&#x70B9;&#xFF0C;&#x6216;&#x8005; 17:30:15&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x4F7F;&#x7528;&#x524D;&#x9762;&#x4EE3;&#x7801;&#x521B;&#x5EFA;&#x7684;&#x65F6;&#x533A;&#x521B;&#x5EFA;&#x4E86;&#x4E24;&#x4E2A;&#x672C;&#x5730;&#x65F6;&#x95F4;&#x3002;&#x4E4B;&#x540E;&#x6BD4;&#x8F83;&#x65F6;&#x95F4;&#x5E76;&#x4EE5;&#x5C0F;&#x65F6;&#x548C;&#x5206;&#x949F;&#x4E3A;&#x5355;&#x4F4D;&#x8BA1;&#x7B97;&#x4E24;&#x4E2A;&#x65F6;&#x95F4;&#x7684;&#x65F6;&#x95F4;&#x5DEE;&#xFF1A;123456789LocalTime now1 = LocalTime.now(zone1);LocalTime now2 = LocalTime.now(zone2);System.out.println(now1.isBefore(now2)); // falselong hoursBetween = ChronoUnit.HOURS.between(now1, now2);long minutesBetween = ChronoUnit.MINUTES.between(now1, now2);System.out.println(hoursBetween); // -3System.out.println(minutesBetween); // -239 LocalTime &#x63D0;&#x4F9B;&#x4E86;&#x591A;&#x79CD;&#x5DE5;&#x5382;&#x65B9;&#x6CD5;&#x6765;&#x7B80;&#x5316;&#x5BF9;&#x8C61;&#x7684;&#x521B;&#x5EFA;&#xFF0C;&#x5305;&#x62EC;&#x89E3;&#x6790;&#x65F6;&#x95F4;&#x5B57;&#x7B26;&#x4E32;&#x3002;123456789LocalTime late = LocalTime.of(23, 59, 59);System.out.println(late); // 23:59:59DateTimeFormatter germanFormatter = DateTimeFormatter .ofLocalizedTime(FormatStyle.SHORT) .withLocale(Locale.GERMAN);LocalTime leetTime = LocalTime.parse(&quot;13:37&quot;, germanFormatter);System.out.println(leetTime); // 13:37 LocalDate &#x672C;&#x5730;&#x65E5;&#x671F;LocalDate &#x8868;&#x793A;&#x4E86;&#x4E00;&#x4E2A;&#x786E;&#x5207;&#x7684;&#x65E5;&#x671F;&#xFF0C;&#x6BD4;&#x5982; 2014-03-11&#x3002;&#x8BE5;&#x5BF9;&#x8C61;&#x503C;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x7528;&#x8D77;&#x6765;&#x548C;LocalTime&#x57FA;&#x672C;&#x4E00;&#x81F4;&#x3002;&#x4E0B;&#x9762;&#x7684;&#x4F8B;&#x5B50;&#x5C55;&#x793A;&#x4E86;&#x5982;&#x4F55;&#x7ED9;Date&#x5BF9;&#x8C61;&#x52A0;&#x51CF;&#x5929;/&#x6708;/&#x5E74;&#x3002;&#x53E6;&#x5916;&#x8981;&#x6CE8;&#x610F;&#x7684;&#x662F;&#x8FD9;&#x4E9B;&#x5BF9;&#x8C61;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x64CD;&#x4F5C;&#x8FD4;&#x56DE;&#x7684;&#x603B;&#x662F;&#x4E00;&#x4E2A;&#x65B0;&#x5B9E;&#x4F8B;&#x3002;12345678LocalDate today = LocalDate.now();LocalDate tomorrow = today.plus(1, ChronoUnit.DAYS);LocalDate yesterday = tomorrow.minusDays(2);LocalDate independenceDay = LocalDate.of(2014, Month.JULY, 4);DayOfWeek dayOfWeek = independenceDay.getDayOfWeek();System.out.println(dayOfWeek); // FRIDAY &#x4ECE;&#x5B57;&#x7B26;&#x4E32;&#x89E3;&#x6790;&#x4E00;&#x4E2A;LocalDate&#x7C7B;&#x578B;&#x548C;&#x89E3;&#x6790;LocalTime&#x4E00;&#x6837;&#x7B80;&#x5355;&#xFF1A;123456DateTimeFormatter germanFormatter = DateTimeFormatter .ofLocalizedDate(FormatStyle.MEDIUM) .withLocale(Locale.GERMAN);LocalDate xmas = LocalDate.parse(&quot;24.12.2014&quot;, germanFormatter);System.out.println(xmas); // 2014-12-24 LocalDateTime &#x672C;&#x5730;&#x65E5;&#x671F;&#x65F6;&#x95F4;LocalDateTime &#x540C;&#x65F6;&#x8868;&#x793A;&#x4E86;&#x65F6;&#x95F4;&#x548C;&#x65E5;&#x671F;&#xFF0C;&#x76F8;&#x5F53;&#x4E8E;&#x524D;&#x4E24;&#x8282;&#x5185;&#x5BB9;&#x5408;&#x5E76;&#x5230;&#x4E00;&#x4E2A;&#x5BF9;&#x8C61;&#x4E0A;&#x4E86;&#x3002;LocalDateTime&#x548C;LocalTime&#x8FD8;&#x6709;LocalDate&#x4E00;&#x6837;&#xFF0C;&#x90FD;&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#x3002;LocalDateTime&#x63D0;&#x4F9B;&#x4E86;&#x4E00;&#x4E9B;&#x80FD;&#x8BBF;&#x95EE;&#x5177;&#x4F53;&#x5B57;&#x6BB5;&#x7684;&#x65B9;&#x6CD5;&#x3002;123456789LocalDateTime sylvester = LocalDateTime.of(2014, Month.DECEMBER, 31, 23, 59, 59);DayOfWeek dayOfWeek = sylvester.getDayOfWeek();System.out.println(dayOfWeek); // WEDNESDAYMonth month = sylvester.getMonth();System.out.println(month); // DECEMBERlong minuteOfDay = sylvester.getLong(ChronoField.MINUTE_OF_DAY);System.out.println(minuteOfDay); // 1439 &#x53EA;&#x8981;&#x9644;&#x52A0;&#x4E0A;&#x65F6;&#x533A;&#x4FE1;&#x606F;&#xFF0C;&#x5C31;&#x53EF;&#x4EE5;&#x5C06;&#x5176;&#x8F6C;&#x6362;&#x4E3A;&#x4E00;&#x4E2A;&#x65F6;&#x95F4;&#x70B9;Instant&#x5BF9;&#x8C61;&#xFF0C;Instant&#x65F6;&#x95F4;&#x70B9;&#x5BF9;&#x8C61;&#x53EF;&#x4EE5;&#x5F88;&#x5BB9;&#x6613;&#x7684;&#x8F6C;&#x6362;&#x4E3A;&#x8001;&#x5F0F;&#x7684;java.util.Date&#x3002;12345Instant instant = sylvester .atZone(ZoneId.systemDefault()) .toInstant();Date legacyDate = Date.from(instant);System.out.println(legacyDate); // Wed Dec 31 23:59:59 CET 2014 &#x683C;&#x5F0F;&#x5316;LocalDateTime&#x548C;&#x683C;&#x5F0F;&#x5316;&#x65F6;&#x95F4;&#x548C;&#x65E5;&#x671F;&#x4E00;&#x6837;&#x7684;&#xFF0C;&#x9664;&#x4E86;&#x4F7F;&#x7528;&#x9884;&#x5B9A;&#x4E49;&#x597D;&#x7684;&#x683C;&#x5F0F;&#x5916;&#xFF0C;&#x6211;&#x4EEC;&#x4E5F;&#x53EF;&#x4EE5;&#x81EA;&#x5DF1;&#x5B9A;&#x4E49;&#x683C;&#x5F0F;&#xFF1A;123456DateTimeFormatter formatter = DateTimeFormatter .ofPattern(&quot;MMM dd, yyyy - HH:mm&quot;);LocalDateTime parsed = LocalDateTime.parse(&quot;Nov 03, 2014 - 07:13&quot;, formatter);String string = formatter.format(parsed);System.out.println(string); // Nov 03, 2014 - 07:13 &#x548C;java.text.NumberFormat&#x4E0D;&#x4E00;&#x6837;&#x7684;&#x662F;&#x65B0;&#x7248;&#x7684;DateTimeFormatter&#x662F;&#x4E0D;&#x53EF;&#x53D8;&#x7684;&#xFF0C;&#x6240;&#x4EE5;&#x5B83;&#x662F;&#x7EBF;&#x7A0B;&#x5B89;&#x5168;&#x7684;&#x3002;&#x5173;&#x4E8E;&#x65F6;&#x95F4;&#x65E5;&#x671F;&#x683C;&#x5F0F;&#x7684;&#x8BE6;&#x7EC6;&#x4FE1;&#x606F;&#xFF1A;http://download.java.net/jdk8/docs/api/java/time/format/DateTimeFormatter.html 10. Annotation &#x6CE8;&#x89E3;&#x5728;Java 8&#x4E2D;&#x652F;&#x6301;&#x591A;&#x91CD;&#x6CE8;&#x89E3;&#x4E86;&#xFF0C;&#x5148;&#x770B;&#x4E2A;&#x4F8B;&#x5B50;&#x6765;&#x7406;&#x89E3;&#x4E00;&#x4E0B;&#x662F;&#x4EC0;&#x4E48;&#x610F;&#x601D;&#x3002;&#x9996;&#x5148;&#x5B9A;&#x4E49;&#x4E00;&#x4E2A;&#x5305;&#x88C5;&#x7C7B;Hints&#x6CE8;&#x89E3;&#x7528;&#x6765;&#x653E;&#x7F6E;&#x4E00;&#x7EC4;&#x5177;&#x4F53;&#x7684;Hint&#x6CE8;&#x89E3;&#xFF1A;1234567@interface Hints { Hint[] value();}@Repeatable(Hints.class)@interface Hint { String value();} Java 8&#x5141;&#x8BB8;&#x6211;&#x4EEC;&#x628A;&#x540C;&#x4E00;&#x4E2A;&#x7C7B;&#x578B;&#x7684;&#x6CE8;&#x89E3;&#x4F7F;&#x7528;&#x591A;&#x6B21;&#xFF0C;&#x53EA;&#x9700;&#x8981;&#x7ED9;&#x8BE5;&#x6CE8;&#x89E3;&#x6807;&#x6CE8;&#x4E00;&#x4E0B;@Repeatable&#x5373;&#x53EF;&#x3002; &#x4F8B; 1: &#x4F7F;&#x7528;&#x5305;&#x88C5;&#x7C7B;&#x5F53;&#x5BB9;&#x5668;&#x6765;&#x5B58;&#x591A;&#x4E2A;&#x6CE8;&#x89E3;&#xFF08;&#x8001;&#x65B9;&#x6CD5;&#xFF09;12@Hints({@Hint(&quot;hint1&quot;), @Hint(&quot;hint2&quot;)})class Person {} &#x4F8B; 2&#xFF1A;&#x4F7F;&#x7528;&#x591A;&#x91CD;&#x6CE8;&#x89E3;&#xFF08;&#x65B0;&#x65B9;&#x6CD5;&#xFF09;123@Hint(&quot;hint1&quot;)@Hint(&quot;hint2&quot;)class Person {} &#x7B2C;&#x4E8C;&#x4E2A;&#x4F8B;&#x5B50;&#x91CC;java&#x7F16;&#x8BD1;&#x5668;&#x4F1A;&#x9690;&#x6027;&#x7684;&#x5E2E;&#x4F60;&#x5B9A;&#x4E49;&#x597D;@Hints&#x6CE8;&#x89E3;&#xFF0C;&#x4E86;&#x89E3;&#x8FD9;&#x4E00;&#x70B9;&#x6709;&#x52A9;&#x4E8E;&#x4F60;&#x7528;&#x53CD;&#x5C04;&#x6765;&#x83B7;&#x53D6;&#x8FD9;&#x4E9B;&#x4FE1;&#x606F;&#xFF1A;123456Hint hint = Person.class.getAnnotation(Hint.class);System.out.println(hint); // nullHints hints1 = Person.class.getAnnotation(Hints.class);System.out.println(hints1.value().length); // 2Hint[] hints2 = Person.class.getAnnotationsByType(Hint.class);System.out.println(hints2.length); // 2 &#x5373;&#x4FBF;&#x6211;&#x4EEC;&#x6CA1;&#x6709;&#x5728;Person&#x7C7B;&#x4E0A;&#x5B9A;&#x4E49;@Hints&#x6CE8;&#x89E3;&#xFF0C;&#x6211;&#x4EEC;&#x8FD8;&#x662F;&#x53EF;&#x4EE5;&#x901A;&#x8FC7; getAnnotation(Hints.class) &#x6765;&#x83B7;&#x53D6; @Hints&#x6CE8;&#x89E3;&#xFF0C;&#x66F4;&#x52A0;&#x65B9;&#x4FBF;&#x7684;&#x65B9;&#x6CD5;&#x662F;&#x4F7F;&#x7528; getAnnotationsByType &#x53EF;&#x4EE5;&#x76F4;&#x63A5;&#x83B7;&#x53D6;&#x5230;&#x6240;&#x6709;&#x7684;@Hint&#x6CE8;&#x89E3;&#x3002;&#x53E6;&#x5916;Java 8&#x7684;&#x6CE8;&#x89E3;&#x8FD8;&#x589E;&#x52A0;&#x5230;&#x4E24;&#x79CD;&#x65B0;&#x7684;target&#x4E0A;&#x4E86;&#xFF1A;12@Target({ElementType.TYPE_PARAMETER, ElementType.TYPE_USE})@interface MyAnnotation {} &#x5173;&#x4E8E;Java 8&#x7684;&#x65B0;&#x7279;&#x6027;&#x5C31;&#x5199;&#x5230;&#x8FD9;&#x4E86;&#xFF0C;&#x80AF;&#x5B9A;&#x8FD8;&#x6709;&#x66F4;&#x591A;&#x7684;&#x7279;&#x6027;&#x7B49;&#x5F85;&#x53D1;&#x6398;&#x3002;JDK 1.8&#x91CC;&#x8FD8;&#x6709;&#x5F88;&#x591A;&#x5F88;&#x6709;&#x7528;&#x7684;&#x4E1C;&#x897F;&#xFF0C;&#x6BD4;&#x5982;Arrays.parallelSort, StampedLock&#x548C;CompletableFuture&#x7B49;&#x7B49;&#x3002; &#x53C2;&#x8003;&#xFF1A; &#x70B9;&#x6211; L2Dwidget.init({});]]></content>
      <categories>
        <category>JAVA</category>
      </categories>
      <tags>
        <tag>JAVA</tag>
        <tag>JDK</tag>
        <tag>新特性</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[以太坊开发]-Web3j入门]]></title>
    <url>%2F2018%2F03%2F31%2F%E4%BB%A5%E5%A4%AA%E5%9D%8A%E5%BC%80%E5%8F%91-Web3j%E5%85%A5%E9%97%A8%2F</url>
    <content type="text"><![CDATA[[&#x4EE5;&#x592A;&#x574A;&#x5F00;&#x53D1;]-Web3j&#x5165;&#x95E8;&#x642D;&#x5EFA;Spring-MVC&#x73AF;&#x5883;&#x5728;pom.xml&#x4E2D;&#x589E;&#x52A0;: &lt;dependency&gt; &lt;groupId&gt;org.web3j&lt;/groupId&gt; &lt;artifactId&gt;core&lt;/artifactId&gt; &lt;version&gt;3.3.1&lt;/version&gt; &lt;/dependency&gt; &#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x542F;&#x52A8;&#x6D4B;&#x8BD5;&#x73AF;&#x5883;&#x6709;&#x4E09;&#x79CD;:1.&#x672C;&#x5730;&#x79C1;&#x6709;&#x94FE;(&#x968F;&#x5FC3;&#x6240;&#x6B32;&#x641E;)2.&#x4EE5;&#x592A;&#x574A;&#x94B1;&#x5305;(&#x7535;&#x8111;&#x7A7A;&#x95F4;&#x5927;&#x4E86;&#x641E;,&#x4F1A;&#x540C;&#x6B65;block,cao 40&#x4E2A;G)3.&#x4F7F;&#x7528;&#x5BA2;&#x6237;&#x7AEF;(infura,&#x6700;&#x65B9;&#x4FBF;&#x7684;)&#x672C;&#x6B21;&#x662F;&#x57FA;&#x4E8E;&#x79C1;&#x6709;&#x94FE;&#x8FDB;&#x884C;&#x6D4B;&#x8BD5; &#x542F;&#x52A8;&#x79C1;&#x6709;&#x94FE;&#x73AF;&#x5883; geth &#x2013;rpcapi personal,db,eth,net,web3 &#x2013;rpc &#x2013;rinkeby console 2&gt;&gt;geth.log Java&#x4EE3;&#x7801; import org.web3j.protocol.Web3j; import org.web3j.protocol.core.methods.response.Web3ClientVersion; import org.web3j.protocol.http.HttpService; public class Test { public static void main(String[] args) throws Exception { //Web3j web3 = Web3j.build(new HttpService(&quot;https://kovan.infura.io/yXDUNwlNOcx0UJCWjzNr&quot;)); Web3j web3 = Web3j.build(new HttpService()); Web3ClientVersion web3ClientVersion = web3.web3ClientVersion().send(); String clientVersion = web3ClientVersion.getWeb3ClientVersion(); System.out.println(clientVersion); } } L2Dwidget.init({});]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
        <tag>区块链</tag>
        <tag>Web3</tag>
        <tag>java</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Kettle抽取大数据量Excel]]></title>
    <url>%2F2018%2F03%2F21%2FKettle%E6%8A%BD%E5%8F%96%E5%A4%A7%E6%95%B0%E6%8D%AE%E9%87%8FExcel%2F</url>
    <content type="text"><![CDATA[Kettle&#x62BD;&#x53D6;&#x5927;&#x6570;&#x636E;&#x91CF;&#x7684;Excel&#x9700;&#x6C42;&#x63CF;&#x8FF0; &#x5BA2;&#x6237;&#x7ED9;&#x4E86;&#x4E00;&#x4E2A;130M&#x7684;Excel,&#x9700;&#x8981;&#x548C;&#x751F;&#x4EA7;&#x73AF;&#x5883;&#x7684;&#x6570;&#x636E;(O)&#x505A;&#x5BF9;&#x6BD4;&#x548C;&#x6570;&#x636E;&#x5206;&#x6790;,&#x5E76;&#x628A;&#x5BF9;&#x6BD4;&#x7ED3;&#x679C; &#x653E;&#x5230;Excel. &#x5B9E;&#x9645;&#x64CD;&#x4F5C; 1.&#x4F7F;&#x7528;Kettle&#x5EFA;&#x7ACB;&#x62BD;&#x53D6; &#x7136;&#x540E;,&#x4F7F;&#x7528;Toad for Oracle ,PLSQL &#x7B49;&#x5DE5;&#x5177;&#x5BFC;&#x5165;,&#x90FD;&#x662F;&#x4E00;&#x70B9;&#x51FB;&#x5C31;&#x5361;&#x90A3;&#x4E0D;&#x52A8;&#x4E86;. &#x53BB;&#x767E;&#x5EA6;&#x67E5;&#x627E;&#x89E3;&#x51B3;&#x65B9;&#x6CD5;,&#x53EF;&#x80FD;&#x662F;&#x67E5;&#x627E;&#x59FF;&#x52BF;&#x4E0D;&#x5BF9;.&#x6CA1;&#x6709;&#x627E;&#x5230;&#x53EF;&#x884C;&#x65B9;&#x6CD5;. &#x6700;&#x540E;&#x4E0D;&#x65AD;&#x6D4B;&#x8BD5;&#x627E;&#x5230;&#x4E00;&#x4E2A;&#x5BFC;&#x5165;&#x65B9;&#x6CD5;(&#x611F;&#x8C22;@765763576&#x63D0;&#x4F9B;&#x601D;&#x8DEF;) 2.Excel&#x8F6C;&#x6362;&#x4E3A;Csv &#x5148;&#x5C06;Excel&#x8F6C;&#x6362;&#x4E3A;Csv 3.&#x5728;&#x6267;&#x884C;&#x5BFC;&#x5165; L2Dwidget.init({});]]></content>
      <categories>
        <category>kettle</category>
      </categories>
      <tags>
        <tag>Kettle</tag>
        <tag>抽取</tag>
        <tag>Excel</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[[以太坊开发]-私有链搭建]]></title>
    <url>%2F2018%2F03%2F11%2Ftest%2F</url>
    <content type="text"><![CDATA[[&#x4EE5;&#x592A;&#x574A;&#x5F00;&#x53D1;]-&#x79C1;&#x6709;&#x94FE;&#x642D;&#x5EFA;&#x642D;&#x5EFA;&#x73AF;&#x5883;(W)1.&#x5B89;&#x88C5;gethgeth&#x5B98;&#x65B9;&#x4E0B;&#x8F7D;&#x5730;&#x5740; &#x6216; &#x56FD;&#x5185;&#x955C;&#x50CF;&#x5728;&#x547D;&#x4EE4;&#x884C;&#x4E2D;&#x8F93;&#x5165; geth help &#x53EF;&#x67E5;&#x770B;geth&#x7684;&#x7528;&#x6CD5; 2.&#x5B89;&#x88C5;cygwinwindow&#x9700;&#x8981;&#x4E0B;&#x8F7D;cygwin&#x6A21;&#x62DF;linux&#x73AF;&#x5883;cygwin&#x5B98;&#x65B9;&#x4E0B;&#x8F7D;&#x5730;&#x5740; &#x5B89;&#x88C5;&#x4F7F;&#x7528;&#x8BF4;&#x660E;cygwin&#x5B89;&#x88C5;&#x6559;&#x7A0B;&#x56FE;&#x89E3; 3.&#x642D;&#x5EFA;&#x79C1;&#x6709;&#x94FE;&#x5B98;&#x65B9;&#x63A8;&#x8350;&#x7684;&#x65B9;&#x6CD5;:&#x901A;&#x8FC7;geth&#x547D;&#x4EE4;&#x4E2D;&#x7684;&#x2013;networkid&#x9009;&#x9879;,&#x8BBE;&#x7F6E;&#x4E00;&#x4E2A;&#x4E0E;&#x4E3B;&#x7F51;&#x4E0D;&#x540C;&#x7684;networkid(&#x4E3B;&#x7F51;&#x7684;networkid&#x4E3A;1) (1) cmd &#x547D;&#x4EE4;&#x884C;: geth -help &#x67E5;&#x770B;geth&#x547D;&#x4EE4;&#x662F;&#x5426;&#x53EF;&#x7528; (2) &#x4F7F;&#x7528;cyg&#x521B;&#x5EFA;: mkdir private-gethcd private-geth (3) &#x521B;&#x5EFA;&#x521B;&#x4E16;&#x533A;&#x5757;,&#x4E00;&#x4E2A;json&#x683C;&#x5F0F;&#x7684;&#x6587;&#x4EF6; vim genesis.json &#x5728;&#x521B;&#x4E16;&#x533A;&#x5757;&#x7684;json&#x6587;&#x4EF6;&#x4E2D;&#x7C98;&#x8D34;,&#x5E76;&#x4FDD;&#x5B58;. { &quot;config&quot;: { &quot;chainId&quot;: 15, &quot;homesteadBlock&quot;: 0, &quot;eip155Block&quot;: 0, &quot;eip158Block&quot;: 0 }, &quot;coinbase&quot; : &quot;0x0000000000000000000000000000000000000000&quot;, &quot;difficulty&quot; : &quot;0x10000&quot;, &quot;extraData&quot; : &quot;&quot;, &quot;gasLimit&quot; : &quot;0xffffffff&quot;, &quot;nonce&quot; : &quot;0x0000000000000042&quot;, &quot;mixhash&quot; : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;parentHash&quot; : &quot;0x0000000000000000000000000000000000000000000000000000000000000000&quot;, &quot;timestamp&quot; : &quot;0x00&quot;, &quot;alloc&quot;: { } } (4) &#x521D;&#x59CB;&#x5316;&#x521B;&#x4E16;&#x8282;&#x70B9;,&#x5E76;&#x8BBE;&#x7F6E;data&#x76EE;&#x5F55; geth &#x2013;datadir ./data/00 init genesis.json (5) &#x542F;&#x52A8;&#x8282;&#x70B9;,&#x52A0;consol&#x8868;&#x793A;&#x542F;&#x52A8;&#x540E;,&#x542F;&#x7528;&#x547D;&#x4EE4;&#x884C;: geth &#x2013;datadir ./data/00 &#x2013;networkid 15 console (6)&#x79C1;&#x6709;&#x94FE;&#x642D;&#x5EFA;&#x6210;&#x529F;,&#x53EF;&#x4EE5;&#x6316;&#x70B9;&#x77FF;&#x4E86;. &#x67E5;&#x770B;&#x8D26;&#x6237; eth.accounts &#x5EFA;&#x7ACB;&#x8D26;&#x6237;,&#x4FDD;&#x5B58;&#x5730;&#x5740; personal.newAccount(&#x201C;666666&#x201D;) &#x67E5;&#x770B;&#x8D26;&#x6237; eth.accounts &#x6267;&#x884C;&#x6316;&#x77FF; miner.start() &#x505C;&#x6B62;&#x6316;&#x77FF; miner.stop() &#x67E5;&#x770B;&#x8D26;&#x6237; eth.getBalance(eth.accounts[0]) &#x5982;&#x679C;&#x4E0D;&#x60F3;&#x6316;&#x77FF;:&#x53EF;&#x4EE5;&#x5148;&#x521B;&#x5EFA;&#x8D26;&#x6237;&#x7136;&#x540E;&#x628A;&#x5730;&#x5740;&#x8D4B;&#x503C;&#x51FA;&#x6765;,&#x7C98;&#x8D34;&#x5728;&#x521B;&#x4E16;json&#x7684;alloc&#x4E2D;. &quot;alloc&quot;: { &quot;3ae88fe370c39384fc16da2c9e768cf5d2495b48&quot;: { &quot;balance&quot;: &quot;20000009800000000000000000000&quot; }, &quot;81063419f13cab5ac090cd8329d8fff9feead4a0&quot;: { &quot;balance&quot;: &quot;20000009800000000000000000000&quot; }, &quot;9da26fc2e1d6ad9fdd46138906b0104ae68a65d8&quot;: { &quot;balance&quot;: &quot;20000009800000000000000000000&quot; } } &#x91CD;&#x65B0;&#x521D;&#x59CB;&#x5316; geth &#x2013;datadir init genesis.json &#x5728;&#x542F;&#x52A8;&#x5BA2;&#x6237;&#x7AEF;,&#x67E5;&#x770B;&#x8D26;&#x6237;&#x5C31;&#x53EF;&#x4EE5;&#x4E86; -&#x81EA;&#x5DF1;&#x6316;&#x77FF;&#x4F1A;&#x4EA7;&#x751F;&#x4E00;&#x4E9B;&#x533A;&#x5757;&#x6570;&#x636E;&#x7269;&#x7406;&#x5220;&#x9664;,&#x5373;&#x53EF;. &#x767E;&#x5EA6;&#x8FDE;&#x63A5; L2Dwidget.init({});]]></content>
      <categories>
        <category>区块链</category>
      </categories>
      <tags>
        <tag>以太坊</tag>
        <tag>私链</tag>
        <tag>区块链</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F11%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment L2Dwidget.init({});]]></content>
  </entry>
</search>
